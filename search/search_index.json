{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":"<p>Missing Feature ACAP is a versatile extension that delivers small but powerful functionalities to AXIS cameras\u2014fast. Built on the robust ACAP (AXIS Camera Application Platform), this extension empowers you to implement custom solutions without waiting for long development cycles.</p> <p>By leveraging the flexibility of ACAP, Missing Feature ACAP makes it easy to:</p> <ul> <li>Deploy Rapid Solutions: Quickly roll out custom features tailored to time-sensitive projects and unique customer needs.</li> <li>Bridge Functionality Gaps: Address specialized, project-specific requirements that aren\u2019t covered by standard AXIS functionalities.</li> <li>Enhance Camera Operations: Extend the capabilities of your AXIS cameras with targeted features, like the \u201cDelay Timer,\u201d which triggers subsequent events after a specified delay.</li> </ul> <p>With Missing Feature ACAP, even the most narrowly focused requirements can be integrated quickly and cost-effectively. This ensures that your camera systems are always at the forefront of technology, adapting seamlessly to evolving use cases and maximizing your camera\u2019s potential.</p> <p>Explore the rest of the documentation to learn how Missing Feature ACAP can transform your AXIS camera operations with custom, on-demand solutions.</p>"},{"location":"change/","title":"Changelog","text":""},{"location":"change/#legend","title":"Legend","text":"<ul> <li>I: Improvement  </li> <li>B: Bugfix </li> <li>F: New Feature  </li> <li>C: Change  </li> </ul>"},{"location":"change/#v1095-05092025","title":"V1.0.95 \u2013 05.09.2025","text":"<ul> <li>B: Websocket issue with 12.5 reverse proxy manifest modification</li> </ul>"},{"location":"change/#v1094-23072025","title":"V1.0.94 \u2013 23.07.2025","text":"<ul> <li>I: Add SMS Eagle for SMS and Voice calls to notifications feature.</li> </ul>"},{"location":"change/#v1093-04072025","title":"V1.0.93 \u2013 04.07.2025","text":"<ul> <li>I: Use axparmenter to obtain resolution and number of image configurations.</li> </ul>"},{"location":"change/#v1092-02072025","title":"V1.0.92 \u2013 02.07.2025","text":"<ul> <li>C: Increase max. resolution (ui validation) for timelaps generation.</li> </ul>"},{"location":"change/#v1091-23062025","title":"V1.0.91 \u2013 23.06.2025","text":"<ul> <li>C: Remove Event Countdown feature, could be used with older versions.</li> <li>C: Remove MQTT UI Defaults.</li> <li>C: Made non present of SD-Card more verbose, not show error toast message.</li> <li>C: Update open source licenses.</li> </ul>"},{"location":"change/#v1090-21062025","title":"V1.0.90 \u2013 21.06.2025","text":"<ul> <li>I: Unify SD-Card Managment for all features, now it is more reslilent to SD-Card failures.</li> <li>I: Adding SD-Card cache for metadata dispatcher</li> <li>I: Adding MQTT sink for metadata dispatcher</li> <li>I: Adding feature start watchdog, in case of camera starts and external services prevent the feature from start.</li> <li>I: Improve stop code for some features.</li> <li>I: Adding SD-Card info to webui when one exists.</li> </ul>"},{"location":"change/#v1089-13062025","title":"V1.0.89 \u2013 13.06.2025","text":"<ul> <li>I: Add delete button for metrics database (SD-Card)</li> <li>I: Split .eap builds into cv25, artep6, artpec7, metadata scene etc..</li> </ul>"},{"location":"change/#v1088-12062025","title":"V1.0.88 \u2013 12.06.2025","text":"<ul> <li>I: Only transmit scene analytics when observations exists</li> <li>B: Fix consolidated issue that only one was possbile to add</li> </ul>"},{"location":"change/#v1086-11062025","title":"V1.0.86 \u2013 11.06.2025","text":"<ul> <li>I: Add Metadata scene description analytics metric</li> <li>I: Add Metadata consolidated analytics metric</li> <li>I: Add JSON export for metrics export when stored on SD-Card</li> <li>C: Split artpec-builds into artep6 and artpec7+</li> </ul>"},{"location":"change/#v1085-10062025","title":"V1.0.85 \u2013 10.06.2025","text":"<ul> <li>B: Fix RAM issue when downloading large meta data from SD-Card (CSV), now it use streams and DB operate in WAL mode.</li> <li>C: Correct sorting on metrices in metadata dispatcher (UI)</li> <li>I: Add PTZ movment metric</li> </ul>"},{"location":"change/#v1082-0606202","title":"V1.0.82 \u2013 06.06.202","text":"<ul> <li>F: Add image to FTP feature</li> <li>F: Update goxis lib fixes SD-Card release callback issue</li> <li>I: Update golang version to latest</li> </ul>"},{"location":"change/#v1073-06062025","title":"V1.0.73 \u2013 06.06.2025","text":"<ul> <li>I: Add loading indicator for csv download on sd-card metadata dispatch</li> </ul>"},{"location":"change/#v1072-06062025","title":"V1.0.72 \u2013 06.06.2025","text":"<ul> <li>I: Add SD-Card sink to metadata dispatcher</li> </ul>"},{"location":"change/#v1071-03062025","title":"V1.0.71 \u2013 03.06.2025","text":"<ul> <li>B: Fix an issue with event countdown that can lead into deadlock when stopping multiple times fast.</li> </ul>"},{"location":"change/#v107-01062025","title":"V1.0.7 \u2013 01.06.2025","text":"<ul> <li>I: Improve Image loading for SD-Card feature</li> <li>B: Fix image deletion regarding to database entries for SD-Card feature (File was deleted but not DB entrie)</li> </ul>"},{"location":"change/#v106-25052025","title":"V1.0.6 \u2013 25.05.2025","text":"<ul> <li>I: Add UI Popup for counting rule occupancy in area</li> </ul>"},{"location":"change/#v105-22052025","title":"V1.0.5 \u2013 22.05.2025","text":"<ul> <li>I: Add config import / export</li> </ul>"},{"location":"change/#v104-22052025","title":"V1.0.4 \u2013 22.05.2025","text":"<ul> <li>I: Add seven.io voice ringtime</li> </ul>"},{"location":"change/#v103-22052025","title":"V1.0.3 \u2013 22.05.2025","text":"<ul> <li>I: Add seven.io balance check before perform api call (sms, voice)</li> </ul>"},{"location":"change/#v102-22052025","title":"V1.0.2 \u2013 22.05.2025","text":"<ul> <li>I: Add doc link for event trigger component</li> <li>B: Fix race condition in countdown feature</li> </ul>"},{"location":"change/#v101-22052025","title":"V1.0.1 \u2013 22.05.2025","text":"<ul> <li>C: 12.4 SDK Adding to build pipeline</li> </ul>"},{"location":"change/#v100-21052025","title":"V1.0.0 \u2013 21.05.2025","text":"<ul> <li>C: Eula Logo remove</li> <li>I: Better error message in case of img size could not get via VAPIX (sd-card feature)</li> <li>B: Prevent save for notifications only when trigger is set</li> <li>C: Readd toast notificaton for test sms success</li> </ul>"},{"location":"change/#v099-15052025","title":"V0.9.9 \u2013 15.05.2025","text":"<ul> <li>C: Remove zone count reset on Occupancy Counting start</li> <li>C: UI Improvments on Occupancy Counting</li> </ul>"},{"location":"change/#v098-13052025","title":"V0.9.8 \u2013 13.05.2025","text":"<ul> <li>C: Remove crossline occupancy because its merged with Occupancy Counting</li> </ul>"},{"location":"change/#v097-12052025","title":"V0.9.7 \u2013 12.05.2025","text":"<ul> <li>F: Occupancy Counting</li> </ul>"},{"location":"change/#v096-12052025","title":"V0.9.6 \u2013 12.05.2025","text":"<ul> <li>F: Add Cross Line Occupancy</li> </ul>"},{"location":"change/#v095-9052025","title":"V0.9.5 \u2013 9.05.2025","text":"<ul> <li>I: Change Teltonika SMS to notification service, including seven.io sms and phone calls</li> </ul>"},{"location":"change/#v094-6052025","title":"V0.9.4 \u2013 6.05.2025","text":"<ul> <li>F: Add Teltonika SMS</li> </ul>"},{"location":"change/#v093-6052025","title":"V0.9.3 \u2013 6.05.2025","text":"<ul> <li>I: Additional JSON Payload for HTTP Metadata Dispatch</li> </ul>"},{"location":"change/#v092-6052025","title":"V0.9.2 \u2013 6.05.2025","text":"<ul> <li>I: Prevent Cert delete when its in use</li> </ul>"},{"location":"change/#v091-6052025","title":"V0.9.1 \u2013 6.05.2025","text":"<ul> <li>I: OPC UA Support for metadata dispatch</li> </ul>"},{"location":"change/#v090-24042025","title":"V0.9.0 \u2013 24.04.2025","text":"<ul> <li>I: Individual feature licensing: features can now be purchased \u00e0 la carte.</li> </ul>"},{"location":"change/#v080-16042025","title":"V0.8.0 \u2013 16.04.2025","text":"<ul> <li>F: Introduce Metadata Dispatch</li> <li>C: move metadata to https into the new Metadata Dispatch</li> <li>B: Font loading issue </li> </ul>"},{"location":"compat/","title":"Compatibility","text":"<p>Firmware Minimum Version: 11.11</p> Feature SoC Prerequisites Event Countdown ARTPEC 6,7,8,9 \u2013 Event Delay Timer ARTPEC 6,7,8,9 CV25 \u2013 Event Camera Bridge ARTPEC 6,7,8,9 CV25 \u2013 Event Sunset and Sunrise ARTPEC 6,7,8,9 CV25 \u2013 Image to SD Card ARTPEC 6,7,8,9 CV25 \u2013 Metadata Dispatch ARTPEC 6,7,8,9 CV25 \u2013 Occupancy counting ARTPEC 6,7,8,9 CV25 \u2013 Notifications ARTPEC 6,7,8,9 CV25 \u2013 Parking Times ARTPEC 6,7,8,9 CV25 AXIS License Plate Verifier"},{"location":"endis/","title":"Enable or Disable Features","text":""},{"location":"endis/#feature-toggles","title":"Feature Toggles","text":"<ul> <li> <p>Slider Control:   Each feature includes a slider that allows you to quickly turn it on or off. Simply slide to enable or disable the feature.</p> </li> <li> <p>Immediate Effect:   Disabling a feature stops all its related functionalities immediately. This is ideal when you need to suspend certain operations without removing the feature from your configuration.</p> </li> </ul>"},{"location":"endis/#open-configuration","title":"Open (Configuration)","text":"<ul> <li> <p>Access Detailed Settings:   Clicking the Open button launches the configuration panel for that specific feature.</p> </li> <li> <p>Customize Settings:   Within the configuration panel, you can adjust various parameters.</p> </li> </ul> <p></p>"},{"location":"event_bridge/","title":"Event Camera Bridge Configuration","text":"<p>Register events from other AXIS cameras into the camera rules system to enable cross-camera rules.</p>"},{"location":"event_bridge/#access-the-configuration-page","title":"Access the Configuration Page","text":"<ul> <li>Open your AXIS camera\u2019s web interface:   Enter your camera\u2019s IP address in a web browser.</li> <li>Navigate to the APP Section:   Click on the APP section.</li> <li>Enable Event Camera Bridge:   Locate Missing Feature ACAP, open it, and enable Event Camera Bridge from the feature list. This opens its configuration panel.</li> </ul> <p>Authentication Requirement</p> <p>Only Digest Authentication is supported for external cameras. Ensure that your cameras are running an up-to-date firmware, and that digest authentication is enabled.</p>"},{"location":"event_bridge/#configuration","title":"Configuration","text":""},{"location":"event_bridge/#add-a-camera","title":"Add a Camera","text":"<ul> <li> <p>Name:   Enter a descriptive name for the camera.</p> </li> <li> <p>IP Address:   Provide the network IP address of the camera.</p> </li> <li> <p>Username:   Enter the username that the system will use to connect to the camera.</p> </li> <li> <p>Password:   Provide the corresponding password for the specified username.</p> </li> </ul>"},{"location":"event_bridge/#camera-buttons","title":"Camera Buttons","text":"<p>Edit Events</p> <p></p> <p>Remove Camera</p> <p></p>"},{"location":"event_bridge/#configure-camera-events","title":"Configure Camera Events","text":"<p>To configure camera events, click the corresponding Edit Events button.</p> <p></p>"},{"location":"event_bridge/#add-event","title":"Add Event","text":"<p>Add a new event for a camera by clicking the ADD EVENT button.</p> <p></p>"},{"location":"event_bridge/#configure-event","title":"Configure Event","text":"<p>Select the desired event. If the event has multiple sources, please specify them. When you are finished, click the Done button.</p> <p></p>"},{"location":"event_bridge/#save","title":"Save","text":"<p>After adding your cameras and events, click the SAVE button. If you receive any errors, such as unauthorized, verify your username, password, or, in the case of network-related issues, check your camera.</p> <p>All cameras must be online</p> <p>After saving, a connection test is automatically performed for all external cameras to verify accessibility and credentials. Make sure all cameras are online during configuration.</p>"},{"location":"event_bridge/#use-in-axis-rules","title":"Use in AXIS Rules","text":"<p>Once you have configured and saved the settings, you can use the event from other cameras to create a rule.</p> <p></p>"},{"location":"event_delay_timer/","title":"Event Delay Timer Configuration","text":"<p>Configure the Event Delay Timer feature to introduce a delay between a trigger event and the execution of an action. </p>"},{"location":"event_delay_timer/#access-the-configuration-page","title":"Access the Configuration Page","text":"<ul> <li>Open your AXIS camera\u2019s web interface.</li> <li>Navigate to the APP section.</li> <li>Locate Missing Feature ACAP:   Open it and enable Event Delay Timer from the feature list to launch its configuration panel.</li> </ul>"},{"location":"event_delay_timer/#set-the-delay-duration","title":"Set the Delay Duration","text":"<ul> <li> <p>Delay (Seconds):     Enter the number of seconds to wait after the trigger event occurs before executing the action.  </p> </li> <li> <p>Hold Time (Seconds or Minutes/Days):     Specify how long the dynamically registered event should remain active after the delay period completes. </p> </li> <li> <p>Prevent Overlap:     When enabled, only one timer can run at a time. Any new events are ignored if a timer is already in its waiting period (the configured delay) or within its hold time. This prevents multiple triggers from overlapping, ensuring a clean, sequential workflow.</p> </li> </ul>"},{"location":"event_delay_timer/#configure-the-trigger-event","title":"Configure the Trigger Event","text":"<ul> <li> <p>Trigger Event:   Choose the event source that will activate the delay timer. Examples include Device I/O Virtual Input, Motion Detection, or Video Analytics.</p> </li> <li> <p>Source / Data Fields:   Depending on the selected trigger event, additional details may be required\u2014such as specifying the port number for a virtual input or a particular I/O channel.</p> </li> </ul> <p></p>"},{"location":"event_delay_timer/#save-and-verify","title":"Save and Verify","text":"<ul> <li> <p>Save the Configuration:   Once all settings are configured, save your changes.</p> </li> <li> <p>Integration with AXIS Rule System:   The generated Event Condition can now be used within the AXIS Rule System to further automate workflows.</p> </li> </ul>"},{"location":"event_delay_timer/#use-with-axis-rule-system","title":"Use with AXIS Rule System","text":"<p>To utilize the Delay Complete event from Missing Feature ACAP in your AXIS camera\u2019s rule system, follow these steps:</p> <ol> <li> <p>Add a New Rule </p> <ul> <li>In the AXIS camera\u2019s web interface, go to System &gt; Events &gt; Rules and click Add Rule.</li> </ul> </li> <li> <p>Specify the Rule Name </p> <ul> <li>Give your rule a descriptive name, for example, LED Delay.</li> </ul> </li> <li> <p>Set the Condition </p> <ul> <li>From the dropdown, select Missing Features: Delay Complete (10s).  </li> </ul> </li> <li> <p>Configure the Action </p> <ul> <li>Choose Flash status LED (or any other desired action).</li> <li>Select the Color (e.g., Green).</li> <li>Set the Duration (e.g., 00:00:04).</li> </ul> </li> <li> <p>Save the Rule </p> <ul> <li>Click Save to apply your settings.</li> </ul> </li> </ol> <p>Once the delay completes, the rule will automatically trigger the configured action\u2014allowing you to automate follow-up tasks (such as flashing an LED) after a timed delay.</p> <p></p>"},{"location":"event_sunrise/","title":"Event Sunrise and Sunset Configuration","text":"<p>Using SunriseSunset.io API for retrieving sunrise and sunset times for a specific longitude and latitude to create AXIS event triggers.</p>"},{"location":"event_sunrise/#access-the-configuration-page","title":"Access the Configuration Page","text":"<ul> <li>Open your AXIS camera\u2019s web interface:   Enter your camera\u2019s IP address in a web browser.</li> <li>Navigate to the APP Section:   Click on the APP section.</li> <li>Enable Event Sunrise and Sunset:   Locate Missing Feature ACAP, open it, and enable Event Sunrise and Sunset from the feature list. This opens its configuration panel.</li> </ul>"},{"location":"event_sunrise/#select-location-on-map","title":"Select Location on Map","text":"<ul> <li>Select Location:   Click on the map within the configuration panel to choose your camera\u2019s location. This allows the system to retrieve the correct sunrise and sunset times for your area.</li> </ul>"},{"location":"event_sunrise/#save-the-configuration","title":"Save the Configuration","text":"<ul> <li>Save:   After setting the location, click Save to apply the settings.</li> </ul> <p>Tip</p> <p>After saving your changes, details about the upcoming sunrise and sunset will be displayed beneath the map.</p> <p></p>"},{"location":"event_sunrise/#use-with-axis-rule-system","title":"Use with AXIS Rule System","text":"<p>To integrate day/night events from Missing Feature ACAP into your AXIS camera\u2019s rule system, follow these steps:</p> <ol> <li> <p>Add a New Rule </p> <ul> <li>In the AXIS camera\u2019s web interface, navigate to System &gt; Events &gt; Rules and click Add a Rule.</li> </ul> </li> <li> <p>Specify the Rule Name </p> <ul> <li>Give your rule a descriptive name, for example, DN Change.</li> </ul> </li> <li> <p>Set the Condition </p> <ul> <li>From the dropdown, select Missing Features: Sun Events.</li> <li>Choose Daylight.</li> </ul> </li> <li> <p>Configure the Action </p> <ul> <li>In the Action section, pick the desired behavior (e.g., Use day-night mode while the rule is active).</li> <li>Adjust any additional settings to suit your requirements.</li> </ul> </li> <li> <p>Save the Rule </p> <ul> <li>Click Save to finalize the configuration.</li> </ul> </li> </ol> <p></p>"},{"location":"event_timed/","title":"Timed Event Sequence Configuration","text":"<p>This configuration allows you to trigger a follow\u2011up event only if it occurs within a specific time window after an initial event. Follow these steps to set it up:</p>"},{"location":"event_timed/#access-the-configuration-page","title":"Access the Configuration Page","text":"<ul> <li>Open your AXIS camera\u2019s web interface:   Navigate to the camera\u2019s IP address using your preferred web browser.</li> <li>Go to the APP Section:   In the web interface, locate and click on the APP section.</li> <li>Enable Timed Event Sequence:   Find Missing Feature ACAP, open it, and enable the Timed Event Sequence from the feature list. This will launch its configuration panel.</li> </ul>"},{"location":"event_timed/#configure-the-timed-event-sequence","title":"Configure the Timed Event Sequence","text":"<ul> <li>Name:   Enter the name that will appear in AXIS rule conditions.</li> <li>Seconds:   Set the maximum interval (in seconds) between the initial event and the follow\u2011up event before the condition times out.</li> <li>Hold Time (ms):   Specify how long the generated event remains active after it\u2019s triggered.</li> <li>Only One Instance:   Enable this option to ensure that only one timer can run at a time\u2014preventing new events from overlapping with an already active event.</li> <li>Initial Trigger:   Choose the event that will trigger the start of the sequence.</li> <li>Follow-up Trigger:   Select the event that must occur within the configured timeframe (in seconds) to complete the sequence.</li> </ul>"},{"location":"event_timed/#save-the-configuration","title":"Save the Configuration","text":"<ul> <li>Save:   Once you have entered all required settings, click Save to apply the configuration.</li> </ul>"},{"location":"event_timed/#use-with-axis-rule-system","title":"Use with AXIS Rule System","text":"<p>To utilize the Delay Complete event from Missing Feature ACAP in your AXIS camera\u2019s rule system, follow these steps:</p> <ol> <li> <p>Add a New Rule </p> <ul> <li>In the AXIS camera\u2019s web interface, go to System &gt; Events &gt; Rules and click Add Rule.</li> </ul> </li> <li> <p>Specify the Rule Name </p> <ul> <li>Give your rule a descriptive name, for example, Two Events in-time.</li> </ul> </li> <li> <p>Set the Condition </p> <ul> <li>From the dropdown, select Missing Features: Timed Event Sequence.  </li> </ul> </li> <li> <p>Configure the Action </p> <ul> <li>Choose Toggle I/O once (or any other desired action).</li> <li>Select the Port.</li> <li>Set the State.</li> <li>Set the Duration.</li> </ul> </li> <li> <p>Save the Rule </p> <ul> <li>Click Save to apply your settings.</li> </ul> </li> </ol> <p></p>"},{"location":"event_trigger/","title":"Event Trigger Configuration","text":"<p>Provides a user-friendly interface to configure trigger events for your ACAP application. It allows you to select an event from a dynamically loaded list, customize its source and data fields.</p> <p>Tip</p> <p>This input component is used across several features.</p>"},{"location":"event_trigger/#launch-the-configuration-dialog","title":"Launch the Configuration Dialog","text":"<ul> <li>Open the Dialog:   Click the Configure [Trigger Event] button (displayed with an amber fire icon) located on the interface, the name of the button varies.  </li> </ul> <p>Warning</p> <p>If no event is selected, a small message is displayed below the button stating: \"No event selected. Please choose one.\"</p>"},{"location":"event_trigger/#select-an-event","title":"Select an Event","text":"<ul> <li>Event Autocomplete Field:   In the dialog, you will see an autocomplete field labeled Event.  <ul> <li>Begin typing to filter the list of available events.</li> <li>The list is organized with headers, making it easier to navigate through different event groups.</li> <li>Select the desired event from the list to load its configuration details.</li> </ul> </li> </ul>"},{"location":"event_trigger/#configure-event-details","title":"Configure Event Details","text":"<ul> <li>Source Fields and Data Fields:   Once an event is selected, additional configuration options become available:</li> <li>Source Fields:     These fields represent the event's source data.  <ul> <li>Use checkboxes to ignore fields that you do not need.</li> <li>For fields that are not ignored, enter values or choose from a predefined list.</li> </ul> </li> <li> <p>Data Fields:     Similar to source fields, these capture additional data associated with the event.  </p> <ul> <li>You can either provide the necessary values or ignore them based on your needs.</li> </ul> </li> <li> <p>Validation:   The form automatically validates that all required fields are completed. If any required field is missing, a warning message is shown in the dialog.</p> </li> </ul>"},{"location":"event_trigger/#save-your-configuration","title":"Save Your Configuration","text":"<ul> <li>Save and Close:   Once all required fields are correctly filled:<ul> <li>Click the Close button to exit the dialog.</li> <li>The configuration is saved and will be used.</li> </ul> </li> </ul>"},{"location":"event_trigger/#example-workflow","title":"Example Workflow","text":"<ol> <li>Open the Configuration Dialog:    Click the Configure Trigger Event button.  </li> <li>If an event is already selected, notice the chip displaying the event name.  </li> <li> <p>If not, read the prompt encouraging you to select an event.</p> </li> <li> <p>Select and Configure an Event:    Use the autocomplete field to filter and choose your desired event.    Adjust additional settings for source and data fields as necessary.</p> </li> <li> <p>Validate and Save:    Ensure all required</p> </li> </ol>"},{"location":"event_trigger/#example-for-virtual-port-1-active","title":"Example for Virtual Port 1 (Active)","text":""},{"location":"event_trigger/#example-interval-triggers-recurring-pulse","title":"Example Interval Triggers / Recurring Pulse","text":"<p>If you want to take an action, for example every second, go to AXIS Camera Events/Schedules and create a schedule with the type set to <code>Pulse</code>. Then, within the event trigger, select <code>Recurring Pulse</code> and choose the schedule you created.</p> <p></p> <p></p>"},{"location":"event_trigger/#videos","title":"Videos","text":"<p>How to setup an Event Trigger</p> <p>Setup an AXIS Object Analytics Event Trigger</p>"},{"location":"features/","title":"Features","text":"<p>Below is an overview of the features provided by Missing Feature ACAP. </p>"},{"location":"features/#occupancy-counting","title":"Occupancy Counting","text":"<p>Occupancy counting using multiple cameras.</p>"},{"location":"features/#event-camera-bridge","title":"Event Camera Bridge","text":"<p>Register events from other AXIS cameras into the camera rules system to enable cross-camera rules.</p>"},{"location":"features/#event-delay-timer","title":"Event Delay Timer","text":"<p>Introduces a configurable delay between the original event trigger and a subsequent action. This allows you to sequence events and automate workflows that depend on precise timing.</p>"},{"location":"features/#event-sunrise-and-sunset","title":"Event Sunrise and Sunset","text":"<p>Retrieves daily sunrise and sunset data and triggers corresponding events. Perfect for adjusting camera settings, turning on lights, or starting/stopping recordings according to natural light levels.</p>"},{"location":"features/#event-timed-sequence","title":"Event Timed Sequence","text":"<p>Triggers only if a second event follows the first within a defined time window. This feature helps in creating complex event chains, ensuring that actions are executed only under specific, timely conditions.</p>"},{"location":"features/#image-to-sd-card","title":"Image to SD Card","text":"<p>Automatically saves an image whenever a specified event occurs (for example, during motion detection). You can configure both the retention period and the maximum storage capacity (in GB) to suit your requirements. With built-in video generation, snapshots can be transformed into a timelapse sequence\u2014ideal for long-term observation and quick playback of key events.</p>"},{"location":"features/#image-to-ftp","title":"Image to FTP","text":"<p>Automatically transfer and delete recorded jpeg images whenever a specified event occurs. The problem with actual camera FTP sending, is that you cant have a pre buffer over 99 seconds. With this feature there is no such limit.</p>"},{"location":"features/#metadata-dispatch","title":"Metadata Dispatch","text":"<p>Unified metadata and metrics dispatcher for databases, SD-Card, MQTT, OPCUA or HTTPS servers.</p>"},{"location":"features/#notifications","title":"Notifications","text":"<p>Send SMS to Teltonika devices, or sms/phone calls via seven.io</p>"},{"location":"features/#parking-times","title":"Parking Times","text":"<p>Logs the in and out timestamps of vehicles identified by the AXIS License Plate Verifier. This feature maintains a detailed record of parking durations and triggers an event if a vehicle exceeds the designated time. It enables timely notifications, enforcement actions, or other workflow automations.</p>"},{"location":"general_settings/","title":"General Settings / Bottom Bar","text":"<p>General Settings can be accessed via the cog button located in the bottom left corner of the interface.</p>"},{"location":"general_settings/#logging-level","title":"Logging Level","text":"<p>Currently, the only configurable option in General Settings is the Logging Level. The available logging levels are:</p> <ul> <li>ERROR: Only error messages are shown in the log.</li> <li>WARN: Only error and warning messages are displayed.</li> <li>INFO: Displays informational, warning, and error messages.</li> <li>DEBUG: All log messages are shown, including detailed debugging information.</li> </ul>"},{"location":"general_settings/#inspecting-logs","title":"Inspecting Logs","text":"<ul> <li> <p>Live Logs:   Open the \u201cLive Logs\u201d using the logging button (located at the bottom left corner) to view real-time log entries.</p> </li> <li> <p>Persistent Logs:   Access the \u201cApp Log\u201d from the Apps Overview to inspect logs that have been saved persistently.</p> </li> </ul>"},{"location":"img_ftp/","title":"Image to FTP Configuration","text":"<p>Record JPEG frames to the SD card and upload them to the FTP server when a trigger occurs.</p> <p>SD card</p> <p>An SD card is required.</p>"},{"location":"img_ftp/#access-the-configuration-page","title":"Access the Configuration Page","text":"<ul> <li>Open your AXIS camera\u2019s web interface and navigate to the APP section.</li> <li>Find Missing Feature ACAP:   Open it and enable Image to FTP from the feature list to open its configuration panel.</li> </ul>"},{"location":"img_ftp/#configure-ftp-server-connection","title":"Configure FTP Server Connection","text":"<ul> <li> <p>FTP Server:   Enter the FTP server address in format (e.g., 10.0.0.38:21).   Include the port like default FTP port 21.</p> </li> <li> <p>FTP Username:   Provide the username for FTP server authentication.</p> </li> <li> <p>FTP Password:   Enter the password for the FTP user account.</p> </li> <li> <p>FTP Directory:   Specify the target directory on the FTP server where images will be uploaded.  </p> </li> </ul>"},{"location":"img_ftp/#configure-storage-and-performance-settings","title":"Configure Storage and Performance Settings","text":"<ul> <li> <p>Max Size (GB):   Define the maximum storage space (in gigabytes) on the SD card for the image ring buffer.   Range: 1-512 GB</p> </li> <li> <p>Max Time (Minutes):   Set the maximum life time in minutes for an image before it's deleted from the local buffer.   This helps manage storage space efficiently.</p> </li> <li> <p>Channel:   Select the camera sensor or view area you want to capture images from.   Choose the appropriate channel if your camera supports multiple channels.</p> </li> <li> <p>FPS:   Enter the number of frames per second to store locally.  </p> </li> <li> <p>Batch Size (Frames):   Set how many frames are stored in batches to reduce SD card I/O.   Using a higher batch size is recommended for better performance, as long as camera RAM allows.  </p> </li> </ul>"},{"location":"img_ftp/#set-up-the-trigger-event","title":"Set Up the Trigger Event","text":"<ul> <li> <p>Configure Trigger Event:   Click the CONFIGURE TRIGGER EVENT button to set up when image capture should be triggered.</p> </li> <li> <p>Manual Trigger:   Use the MANUAL TRIGGER option for testing or manual activation of the image transfer process.</p> </li> <li> <p>Save Configuration:   Click SAVE to store all your settings.</p> </li> <li> <p>Test Connection:   Use the TEST button to verify your FTP server connection after saving the configuration.</p> </li> </ul>"},{"location":"img_ftp/#ftp-server-requirements","title":"FTP Server Requirements","text":"<p>Before configuring the Image to FTP feature, ensure your FTP server meets the following requirements:</p>"},{"location":"img_ftp/#server-compatibility","title":"Server Compatibility","text":"<ul> <li>FTP Protocol Support: Standard FTP (File Transfer Protocol) server</li> <li>Authentication: Username/password authentication required</li> <li>Anonymous Access: Supported (use \"anonymous\" for both username and password)</li> <li>Directory Access: Server must allow file uploads in the specified target directory</li> </ul>"},{"location":"img_ftp/#network-configuration","title":"Network Configuration","text":"<ul> <li>Port Access: Default FTP port 21 must be accessible from the camera</li> <li>Custom Ports: Supported - specify port in server address (e.g., <code>192.168.1.100:2121</code>)</li> <li>Firewall Settings: Ensure FTP traffic is allowed through your network firewall</li> <li>Passive Mode: The FTP client operates in passive mode for better compatibility with NAT/firewall configurations</li> </ul>"},{"location":"img_ftp/#required-permissions","title":"Required Permissions","text":"<ul> <li>Write Access: FTP user must have write permissions in the target directory</li> </ul>"},{"location":"img_ftp/#file-naming-convention","title":"File Naming Convention","text":"<p>Uploaded images follow this naming pattern: <pre><code>DD.MM.YYYY_HH_MM_SS.mmm.jpg\n</code></pre> Example: <code>09.06.2025_14_30_25.123.jpg</code></p> <p>FTP Server Examples</p> <p>Popular FTP servers that work well with this feature include: - FileZilla Server (Windows/Linux) - vsftpd (Linux) - Pure-FTPd (Linux) - ProFTPD (Linux) - Most NAS devices with built-in FTP servers</p> <p>Security Considerations</p> <ul> <li>FTP transmits credentials in plain text. SFTP can implemented if customer needs it.</li> </ul>"},{"location":"img_sdcard/","title":"Image to SD Card Configuration","text":"<p>Of course you need an SD-Card.</p>"},{"location":"img_sdcard/#access-the-configuration-page","title":"Access the Configuration Page","text":"<ul> <li>Open your AXIS camera\u2019s web interface and navigate to the APP section.</li> <li>Find Missing Feature ACAP:   Open it and enable Image to SD Card from the feature list to open its configuration panel.</li> </ul>"},{"location":"img_sdcard/#configure-storage-limits","title":"Configure Storage Limits","text":"<ul> <li> <p>Max Size (GB):   Define the maximum storage space (in gigabytes) on the SD card for saving images.   If the allocated space is reached, the oldest images will be deleted automatically.</p> </li> <li> <p>Max Time (Days):   Specify the number of days to keep images.   If images exceed this age, they will be removed to free up space.</p> </li> <li> <p>Channel:   If your camera supports multiple channels or sensors, select the channel for which you want to capture images.</p> </li> </ul>"},{"location":"img_sdcard/#set-up-the-trigger-event","title":"Set Up the Trigger Event","text":"<ul> <li> <p>Trigger Event:   Select the event source that will trigger image capture (e.g., Device I/O Virtual Input, Motion Detection, or Analytics).</p> </li> <li> <p>Source/Data Fields:   Depending on your event source, you may need to specify additional parameters (e.g., port number for a virtual input).</p> </li> <li> <p>Save Configuration:   Click Save to store your settings.  </p> </li> </ul>"},{"location":"img_sdcard/#amazon-s3-bucket","title":"Amazon S3 Bucket","text":"<p>Important Note</p> <p>Managing your Amazon S3 bucket is your responsibility; we assume no liability for any costs incurred from its use, nor for any data loss or malfunctions if our ACAP does not operate as expected.</p> <ul> <li>Use Amazon S3 Bucket:   Toggle the switch to enable or disable the use of Amazon S3 for image uploads.</li> </ul> <p>When enabled, additional options will appear.</p>"},{"location":"img_sdcard/#configuration-options","title":"Configuration Options","text":"<ul> <li>Bucket Name:   Enter the name of the Amazon S3 bucket.</li> <li>Region:   Specify the region of the Amazon S3 bucket.</li> <li>Key:   Provide the access key for the Amazon S3 bucket.</li> <li>Secret:   Provide the secret key for the Amazon S3 bucket.</li> <li>Enable ACL:   Toggle this to enable Access Control Lists (ACL) for additional security.</li> <li>Select ACL:   If ACL is enabled, select the desired ACL configuration.</li> <li>Timeout:   Set the AWS operation timeout in seconds (minimum 1 and maximum 10).</li> <li>Delete Old:   Enable this option to remove the image simultaneously from both the bucket and the SD card.</li> </ul> <p>Note</p> <p>There is no retry mechanism for the upload to the Amazon S3 bucket. In case of an upload failure, the image remains available on the SD card.</p>"},{"location":"img_sdcard/#storage-info","title":"Storage Info","text":"<p>After saving your configuration, you can view real-time storage details:</p> <ul> <li>Max Size / Max Days: Displays the limits you\u2019ve configured.</li> <li>GB Used: Shows how much of the allocated storage is currently in use.</li> <li>Oldest Image / Newest Image: Indicates the timestamps of the oldest and newest stored snapshots.</li> <li>Storage Filled (%): A quick reference to how much space is occupied.</li> <li>Reload Status: Click RELOAD to refresh the storage status and see if older images have been removed or if new images have been added.</li> </ul>"},{"location":"img_sdcard/#images","title":"Images","text":"<ul> <li>View Images:     Specify a date and time range in the From and To fields.</li> <li>Search:     Click the search button (magnifying glass icon) to load thumbnails of images captured in that timeframe.</li> <li>Grid Columns:     Adjust the grid layout to see more or fewer images per page.</li> <li>Pagination:     Use the page numbers to navigate through all snapshots.</li> <li>Zoom and Download an Image:     Hover over an image with your mouse to reveal the zoom and download buttons for that image.</li> </ul>"},{"location":"img_sdcard/#generating-videos","title":"Generating Videos","text":"<p>Info</p> <p>The video generator uses images that have been \u201csearched or viewed\u201d in the View Images section. Ensure the time range includes the snapshots you want in your video.</p> <ul> <li>Video Generation Settings: <ul> <li>FPS: Frames per second for the resulting video (1\u201360).</li> <li>Width / Height: Dimensions of the output video (e.g., 1280\u00d7720).</li> <li>HTTPS Requirement: Video encoding requires a secure connection (HTTPS). If you see a warning, reload the camera interface over HTTPS.</li> </ul> </li> <li>Convert to MP4:     Click Convert to MP4 to generate your timelapse or video file from the selected snapshots. The video will be created and made available for download.</li> </ul> <p>HTTPS Required</p> <p>Video encoding requires a secure connection (HTTPS). If you see a warning, reload the camera interface over HTTPS.</p>"},{"location":"install/","title":"Installation","text":"<p>The Axis Camera Application Platform (ACAP) enables you to extend your Axis camera\u2019s capabilities with custom applications. This guide provides step-by-step instructions for installing an ACAP application on your camera using several methods.</p>"},{"location":"install/#prerequisites","title":"Prerequisites","text":"<ul> <li>Compatible Axis Camera: Verify that your camera supports ACAP.</li> <li>ACAP Application File: Obtain the <code>.eap</code> file for the ACAP application you want to install.</li> <li>Allow unsigned apps: Enable \"allow unsigned apps\"</li> <li>Network Connection: Ensure your computer is on the same network as the camera.</li> <li>Administrator Credentials: You need admin access to the camera\u2019s web interface.</li> <li>AXIS Device Manager (Optional): For bulk deployments across multiple cameras. </li> </ul> <p>Enable: Allow unsigned apps</p> <p></p>"},{"location":"install/#installing-via-the-cameras-web-interface","title":"Installing via the Camera\u2019s Web Interface","text":"<p>This is the simplest method if you\u2019re installing on a single camera.</p> <ol> <li> <p>Access the Camera:</p> <ul> <li>Open your web browser and navigate to your camera\u2019s IP address (e.g., <code>http://192.168.1.90</code>).</li> <li>Log in with your administrator credentials.</li> </ul> </li> <li> <p>Navigate to the Apps Section:</p> <ul> <li>Click on the Apps (or similar) section in the camera\u2019s web UI.</li> </ul> </li> <li> <p>Allow unsigned apps:</p> <ul> <li>For now you need to enable \"Allow unsigned apps:\"</li> </ul> </li> <li> <p>Upload and Install the ACAP:</p> <ul> <li>Click Install Application (or \u201cUpload ACAP\u201d).</li> <li>Browse to select Missing Features ACAP <code>.eap</code> file.</li> <li>Confirm the upload.</li> <li>Once uploaded, the camera will display the application. Click Start (or Activate) to launch it.</li> </ul> </li> <li> <p>License:</p> <ul> <li>Apply the license.</li> </ul> </li> </ol>"},{"location":"install/#deploying-with-axis-device-manager","title":"Deploying with AXIS Device Manager","text":"<p>For installations on multiple cameras, use AXIS Device Manager to streamline deployment.</p> <ol> <li> <p>Launch AXIS Device Manager:</p> <ul> <li>Install and open the AXIS Device Manager on a Windows computer.</li> </ul> </li> <li> <p>Select Your Devices:</p> <ul> <li>Scan your network and select the cameras on which you want to install the ACAP.</li> </ul> </li> <li> <p>Deploy the Application:</p> <ul> <li>Right-click on the selected device(s) and choose Install Camera Application....</li> <li>In the installation wizard, browse for your <code>.eap</code> file.</li> <li>If required, select to install any necessary licenses.</li> <li>Click Finish to start the deployment.  </li> <li>Monitor the progress in the task list to confirm successful installation.</li> </ul> </li> <li> <p>License:</p> <ul> <li>Apply the license.</li> </ul> </li> </ol>"},{"location":"licensing/","title":"Licensing","text":""},{"location":"licensing/#info","title":"Info","text":"<p>Missing Feature ACAP requires a valid license to enable its features\u2014without a license, a feature cannot be configured or started. This licensing mechanism ensures that every deployment is properly authorized and that only approved functionalities are activated.</p>"},{"location":"licensing/#use-license","title":"Use License","text":"<p>If you have purchased a license, first register it through the AXIS License Registration portal. Then, open the camera web UI, navigate to the Apps section, and activate Missing Features ACAP.</p>"},{"location":"licensing/#requesting-a-trial-license","title":"Requesting a Trial License","text":"<p>For testing and evaluation purposes, demo licenses can be requested by sending an email to VideoSolutions@commend.at if the trial licenses have expired or their usage limits have been exceeded.</p>"},{"location":"metadata_to_https/","title":"Metadata to HTTPS Configuration","text":"<p>This section describes how to configure Missing Feature ACAP to send metadata over HTTP/HTTPS. The metadata payload is sent to a specified endpoint when a trigger event occurs.</p>"},{"location":"metadata_to_https/#access-the-configuration-page","title":"Access the Configuration Page","text":"<ul> <li>Open your AXIS camera\u2019s web interface:     Enter your camera\u2019s IP address in your browser.</li> <li>Navigate to the APP section:     Locate the APP section in the interface.</li> <li>Enable Metadata to HTTPS:     Find Missing Feature ACAP, open it, and enable Metadata to HTTPS from the feature list. This will open the configuration panel.</li> </ul>"},{"location":"metadata_to_https/#configure-the-trigger-event","title":"Configure the Trigger Event","text":"<ul> <li>Trigger Event:     Select the source event that will trigger the HTTPS call.</li> <li>Additional Parameters:     Depending on the chosen event, you may need to configure extra parameters (e.g., a port number for virtual input).</li> </ul>"},{"location":"metadata_to_https/#specify-the-httpshttp-endpoint","title":"Specify the HTTPS/HTTP Endpoint","text":"<ul> <li>HTTP Protocol:     Choose between HTTP or HTTPS.</li> <li>HTTPS/HTTP URL:     Enter the URL of the server that will receive the metadata. Example: <code>https://yourserver.com:3333</code></li> <li>Skip Verify SSL (When using HTTPS):     Check this option to bypass SSL certificate validation.  </li> </ul> <p>Note</p> <p>The HTTP method used is POST</p>"},{"location":"metadata_to_https/#authentication","title":"Authentication","text":"<ul> <li> <p>Authentication Mode:     Select the mode that best suits your web server:</p> <ul> <li>None: No authentication.</li> <li>Basic: Basic authentication as specified in RFC 7617.</li> <li>Digest: Digest authentication as defined in RFC 7616.</li> <li>Bearer: Bearer token authentication as outlined in RFC 6750.</li> <li>Plain: Sends the username and password in the JSON payload (non-standard; use with caution).</li> </ul> </li> <li> <p>HTTP Headers:     Optionally add one or more HTTP headers to include in the POST request.</p> </li> <li> <p>Include Image:     If enabled, a Base64-encoded image will be included in the metadata payload when the event is triggered (e.g., a snapshot relevant to the event).</p> </li> <li> <p>History Mode:     Enable History Mode to store the last received event in memory. When a trigger event occurs, the system reuses this event instead of requiring a new one. Example: When using AXIS License Plate Verifier events, if a license plate is detected, the event is stored and later used when an input trigger (like an inductive loop sensor) is activated. This ensures that the previously detected license plate information is still available for access control, even if the detection occurred slightly earlier.</p> </li> </ul>"},{"location":"metadata_to_https/#save-and-test","title":"Save and Test","text":"<ul> <li>Save:     Click Save to store your configuration. A test POST request is automatically made to ensure that the web server is reachable.</li> <li>Trigger the Event:     Cause the trigger event to occur (e.g., toggle the virtual input or trigger motion detection).</li> <li>Check Your Endpoint:     Verify that your external service or server receives the HTTPS POST with the JSON payload. If images are included, confirm that the payload contains the Base64-encoded data.</li> </ul>"},{"location":"metadata_to_https/#payload-information","title":"Payload Information","text":"<p>   As described in the          VAPIX Library   , the payload for the Metadata event is contained within the <code>notification</code>   parameter (i.e. <code>params.notification</code>). </p> <p>   When sending the POST request to the HTTPS endpoint, the Metadata notification JSON object is   assigned to the key <code>event</code>. This <code>event</code> key encapsulates the   following properties: </p> <pre><code>\"event\": {\n  \"topic\": \"tnsaxis:CameraApplicationPlatform/ObjectAnalytics/Device1Scenario1\",\n  \"timestamp\": \"1741583919319\",\n  \"message\": {\n    \"data\": {\n      \"active\": \"1\",\n      \"classTypes\": \"human\",\n      \"objectId\": \"622864\",\n      \"scenarioType\": \"ObjectInArea\",\n      \"triggerTime\": \"2025-03-10T05:18:39.319+0000\"\n    },\n    \"key\": {},\n    \"source\": {}\n  }\n}\n</code></pre> ObjectAnalytics Example<pre><code>\"event\": {\n  \"topic\": \"tnsaxis:CameraApplicationPlatform/ObjectAnalytics/Device1Scenario1\",\n  \"timestamp\": 1741583919319,\n  \"message\": {\n      \"data\": {\n          \"active\": \"1\",\n          \"classTypes\": \"human\",\n          \"objectId\": \"622864\",\n          \"scenarioType\": \"ObjectInArea\",\n          \"triggerTime\": \"2025-03-10T05:18:39.319+0000\"\n      },\n      \"key\": {\n\n      },\n      \"source\": {\n\n      }\n  }\n}\n</code></pre> VirtualInput Example<pre><code>\"event\": {\n  \"topic\": \"tns1:Device/tnsaxis:IO/VirtualInput\",\n  \"timestamp\": 1741584445118,\n  \"message\": {\n      \"data\": {\n          \"active\": \"1\"\n      },\n      \"key\": {\n\n      },\n      \"source\": {\n          \"port\": \"1\"\n      }\n  }\n}\n</code></pre> Virtual Input with Image Example<pre><code>\"event\": {\n      \"topic\": \"tns1:Device/tnsaxis:IO/VirtualInput\",\n      \"timestamp\": 1741584445118,\n      \"message\": {\n          \"data\": {\n              \"active\": \"1\"\n          },\n          \"key\": {\n\n          },\n          \"source\": {\n              \"port\": \"1\"\n          }\n      }\n  },\n  \"image\": \"/9j/4AAQSkZJRgABAQAAAQABAAD//gAFAAAA/9sAQwA.....NRuuRUtNIoApup\"\n</code></pre> Parking Monitor - Overparked Example<pre><code>\"event\": {\n    \"topic\": \"tnsaxis:CameraApplicationPlatform/ax_msf/overparked\",\n    \"timestamp\": 1741778727035,\n    \"message\": {\n        \"data\": {\n            \"active\": \"1\",\n            \"entryTime\": \"1741778233\",\n            \"exitTime\": \"1741778727\",\n            \"parkedMinutes\": \"8\",\n            \"plate\": \"CAR005\",\n            \"plateImage\": \"base64image\"\n        },\n        \"key\": {\n\n        },\n        \"source\": {\n\n        }\n    }\n}\n</code></pre>"},{"location":"metadispatch/","title":"Metadata Dispatch Configuration","text":"<p>The MetaDispatch feature acts as a unified gateway for forwarding metadata and metrics to various services or SD-Card. It supports multiple sink types:</p> <ul> <li>InfluxDB (Time-series database)</li> <li>MQTT</li> <li>OPC UA</li> <li>SD-Card</li> <li>SQL Databases (via MySQL, PostgreSQL, SQL Server)</li> <li>Webserver (RESTful interfaces)</li> </ul>"},{"location":"metadispatch/#common-data-fields","title":"Common Data Fields","text":"<p>Regardless of the connection type, each data record includes the following elements:</p> <ul> <li> <p>Measurement Name   A string identifier for the metric/metadata (e.g., <code>\"cpu_usage\"</code>, <code>\"disk_usage\"</code>, <code>\"metadata\"</code>).</p> </li> <li> <p>Tags   A key-value map (string pairs) providing contextual metadata. Example: <pre><code>{ \"mac\": \"00:11:22:33:44:55\", \"device\": \"sda1\" }\n</code></pre></p> </li> <li> <p>Fields:   A key-value map containing the actual metric values or metadata information. Field types include numbers, booleans, and strings.</p> <p>Example:  </p> <p><pre><code>{ \"usage_percent\": 75.5, \"total\": 1000000000 }\n</code></pre> - Timestamp   Indicating when the data was recorded.</p> </li> </ul>"},{"location":"metadispatch/#influxdb","title":"InfluxDB","text":"<ul> <li> <p>Data Format Overview:   Data is sent to InfluxDB as points that comprise a measurement name, tags, fields, and a timestamp.</p> <ul> <li>Example Point (Line Protocol):   cpu_usage,mac=00:11:22:33:44:55 usage_percent=75.5 1640995200000000000</li> </ul> </li> <li> <p>Implementation Details:</p> <ul> <li>Measurement: Directly corresponds to the metric name.</li> <li>Tags: Provided as a JSON object that InfluxDB converts into tags.</li> <li>Fields: Key-value pairs are stored as InfluxDB fields.</li> <li>Timestamp: A <code>time.Time</code> value from Go is used as the measurement\u2019s timestamp.</li> </ul> </li> </ul>"},{"location":"metadispatch/#sd-card","title":"SD-Card","text":"<ul> <li> <p>Clear Event:   Select a clear event to delete records that are older than the configured <code>Max Hours</code> when the trigger occurs.</p> </li> <li> <p>Max Hours:</p> <p>Records older than this value will be deleted when the clear event triggers.</p> </li> </ul>"},{"location":"metadispatch/#manual-clean-up","title":"Manual Clean-UP","text":"<p>Via the red <code>CLEAN-UP</code> button, all stored records could be removed/deleted.</p>"},{"location":"metadispatch/#download-csvjson","title":"Download CSV/JSON","text":"<p>You can download all stored events and metrics as a CSV or JSON.</p>"},{"location":"metadispatch/#get-csv-via-http","title":"Get CSV via HTTP","text":"<p>To retrieve CSV data from the camera\u2019s HTTP interface, you must use HTTP Digest Authentication and send a GET request to the <code>/local/ax_msf/ax_msf/sdcsvstream</code> endpoint. </p>"},{"location":"metadispatch/#get-json-via-http","title":"Get JSON via HTTP","text":"<p>To retrieve CSV data from the camera\u2019s HTTP interface, you must use HTTP Digest Authentication and send a GET request to the <code>/local/ax_msf/ax_msf/sdjsonstream</code> endpoint. </p> <p>Important</p> <p>In case of our ACAP Application is not running or other camera related issue, camera webserver may return with 400, or 500 HTTP Status Codes, our ACAP runs as reverse proxy, so also handle this kind of errors.</p>"},{"location":"metadispatch/#sd-card-cache-resilient-buffer","title":"SD-Card Cache (Resilient Buffer)","text":"<p>Description: Harness the SD-Card as a local buffer when network connectivity drops. Metrics are cached on the card and automatically flushed to the configured sink once connectivity is restored.</p>"},{"location":"metadispatch/#configuration-options","title":"Configuration Options","text":"<ul> <li> <p>Use SD-Card cache     Enable or disable local buffering on the camera\u2019s SD-Card. When enabled, any failed metric writes are stored on the card and retried once connectivity is restored.</p> </li> <li> <p>Cache Size (Entries)     Maximum number of metric records to keep on the SD-Card before older entries are purged. Adjust based on your card capacity and expected outage duration.</p> </li> </ul>"},{"location":"metadispatch/#live-statistics","title":"Live Statistics","text":"<p>Once caching is enabled, two live metrics appear:</p> <ul> <li> <p>Cache entries     Shows the current number of records waiting in the cache.</p> </li> <li> <p>Average insert time     Displays the average time (in ms) to write a record to the cache.</p> </li> </ul> <p>Click the \u201creload\u201d button next to these stats to refresh their values at any time.</p>"},{"location":"metadispatch/#how-it-works","title":"How It Works","text":"<ol> <li> <p>Failure detection:    If a metric write to your configured sink (InfluxDB, MQTT, etc.) fails, the system writes the data to the SD-Card cache instead of dropping it.</p> </li> <li> <p>Background flush:    Every few seconds, the dispatcher checks for cached entries and attempts to resend them to the sink in FIFO order. Successfully sent entries are removed from the cache.</p> </li> <li> <p>Automatic pruning:    When the cache grows beyond your configured maximum, the oldest entries are deleted to make room for new ones, ensuring the cache never exceeds the specified size.</p> </li> </ol>"},{"location":"metadispatch/#mqtt","title":"MQTT","text":"<p>Version: v3.1.1 QoS Level: 1  </p> <p>Note</p> <p>Our MQTT Client operates at QoS 1. In case of a failure, outgoing messages will be cached via the SD-Card cache and retried.</p>"},{"location":"metadispatch/#supported-features","title":"Supported Features","text":"<ul> <li>TLS / Plain TCP     Supports both <code>tcp://</code> and <code>tls://</code> broker URIs.  </li> <li>Authentication <ul> <li>Username/Password  </li> <li>Clean Session &amp; Auto-Reconnect  </li> </ul> </li> <li>JSON Payload     Each message is a JSON object containing <code>measurement</code>, <code>tags</code>, <code>fields</code>, and <code>timestamp</code>.  </li> <li>Timeouts     Connect timeout: 5 s     Publish timeout: 5 s  </li> </ul>"},{"location":"metadispatch/#general-settings","title":"General Settings","text":"<ul> <li> <p>Broker URI     Enter the MQTT broker address in one of these formats:  </p> <ul> <li><code>tcp://your-broker.example.com:1883</code> </li> <li><code>tls://192.168.0.80:8883</code> </li> </ul> </li> <li> <p>Base Topic   Prefix for all MQTT messages (e.g. <code>camera/metrics</code>)  </p> </li> <li> <p>Client ID   Unique identifier for this MQTT connection (e.g. <code>camera-01</code>)  </p> </li> </ul>"},{"location":"metadispatch/#authentication-optional","title":"Authentication (Optional)","text":"<ul> <li> <p>Username   MQTT username, if broker requires authentication  </p> </li> <li> <p>Password   MQTT password, if broker requires authentication </p> </li> </ul>"},{"location":"metadispatch/#topics","title":"Topics","text":"<p>All MQTT topics are published under <code>{base_topic}/{topic}</code>. Replace <code>{base_topic}</code> with your configured base topic.</p> Topic Metric Struct Description <code>{base_topic}/cpu_usage</code> <code>CpuMetrics</code> Instantaneous CPU usage percentage <code>{base_topic}/cpu_times</code> <code>CpuMetrics</code> Breakdown of CPU times (<code>user</code>, <code>system</code>, <code>idle</code>, etc.) <code>{base_topic}/cpu_load_average</code> <code>CpuMetrics</code> System load averages over 1, 5, and 15 minutes <code>{base_topic}/disk_usage</code> <code>DiskMetrics</code> Disk usage stats per partition (<code>disk_total</code>, <code>disk_used</code>, etc.) <code>{base_topic}/net_io</code> <code>NetworkMetrics</code> Network I/O counters per interface (bytes, packets, errors) <code>{base_topic}/optics</code> <code>OpticMetrics</code> Optic module metrics (focus position, zoom, IR filter state, etc.) <code>{base_topic}/power</code> <code>PowerMetrics</code> Power metrics (current, average, max, PoE classes) <code>{base_topic}/proc</code> <code>ProcessMetrics</code> Per\u2010process CPU &amp; memory metrics (<code>cpu_percent</code>, <code>rss</code>, etc.) <code>{base_topic}/ptz</code> <code>PTZMetric</code> PTZ movement &amp; camera parameters (pan, tilt, zoom, focus) <code>{base_topic}/swap_usage</code> <code>SwapMetrics</code> Swap memory statistics (total, used, free, usage percent) <code>{base_topic}/uptime</code> <code>UptimeMetrics</code> System uptime <code>{base_topic}/vmem_usage</code> <code>VMMetrics</code> Virtual memory stats (total, available, used, cached, etc.) <code>{base_topic}/metadata</code> <code>MetaDataMetrics</code> Event\u2010driven metadata payloads <code>{base_topic}/scene_description{ch}</code> <code>MDBSceneMetric</code> Scene description metadata from MDB (channel\u2010specific) <code>{base_topic}/consolidated_track{ch}</code> <code>MDBConsolidatedTrackMetric</code> Consolidated track metadata from MDB (channel\u2010specific)"},{"location":"metadispatch/#payload-format","title":"Payload Format","text":"<p>Every MQTT message payload is a JSON object with the following structure:</p> <pre><code>{\n  \"measurement\": \"&lt;metric_name&gt;\",\n  \"tags\": { /* context tags, if any */ },\n  \"fields\": { /* one or more value fields */ },\n  \"timestamp\": \"2025-06-21T14:23:45.123456789Z\"\n}\n</code></pre>"},{"location":"metadispatch/#rational-databases","title":"Rational Databases","text":""},{"location":"metadispatch/#schema","title":"Schema","text":"<p>Data is stored in a relational table metric_records using a schema similar to the following.</p> <p>Note</p> <p>The <code>metric_records</code> table is automatically created on first connection.</p> <ul> <li> <p>Example Table Schema (MySQL/PostgreSQL/SQL Server): <pre><code>CREATE TABLE metric_records (\n    id          SERIAL PRIMARY KEY,\n    measurement VARCHAR(255) NOT NULL,\n    tags        JSON,\n    fields      JSON,\n    timestamp   TIMESTAMP NOT NULL\n);\n</code></pre></p> </li> <li> <p>Serialization Details:</p> <ul> <li>Tags and Fields: Serialized to JSON strings.</li> <li>Timestamp: Stored in an indexed datetime column.</li> <li>Measurement: The name of the metric is stored in the measurement column.</li> </ul> </li> </ul>"},{"location":"metadispatch/#dsn","title":"DSN","text":"<p>A Data Source Name (DSN) is a connection string that provides the necessary details for your application to establish a connection with a database. It typically comprises the following components:</p> <ul> <li>Username and Password: Authentication credentials for accessing the database.</li> <li>Host and Port: The address and port number where the database server is located.</li> <li>Database Name: The specific database instance to which you want to connect.</li> <li>Additional Parameters: Optional settings such as character set, SSL mode, timezone, and connection timeout that can fine-tune the connection behavior.</li> </ul>"},{"location":"metadispatch/#best-practices-for-dsn-usage","title":"Best Practices for DSN Usage","text":"<ul> <li> <p>Customization:   Include all necessary parameters to match your deployment environment, such as SSL settings, time zone configurations, and connection timeout values.</p> </li> <li> <p>Error Handling:   Validate the DSN string carefully. If the connection fails, review the DSN for typos, missing parameters, or incorrect values.</p> </li> <li> <p>Reference Documentation:   Consult the official documentation of your database driver for a comprehensive list of supported DSN parameters and recommended practices.</p> </li> </ul>"},{"location":"metadispatch/#webserver","title":"Webserver","text":"<ul> <li>Data Format Overview:   Data is transmitted as a JSON payload via an HTTP POST request.</li> </ul> <pre><code>{\n   \"fields\":{\n      \"active\":false\n   },\n   \"measurement\":\"metadata\",\n   \"tags\":{\n      \"context\":\"Virtual input\",\n      \"mac\":\"B8A44F631339\",\n      \"name\":\"device_io_virtualinput\",\n      \"topic\":\"tns1:Device/tnsaxis:IO/VirtualInput\"\n   },\n   \"timestamp\":1744780731\n}\n</code></pre>"},{"location":"metadispatch/#authentication-headers","title":"Authentication &amp; Headers","text":"<ul> <li> <p>Authentication Mode:     Select the mode that best suits your web server:</p> <ul> <li>None: No authentication.</li> <li>Basic: Basic authentication as specified in RFC 7617.</li> <li>Digest: Digest authentication as defined in RFC 7616.</li> <li>Bearer: Bearer token authentication as outlined in RFC 6750.</li> <li>Plain: Sends the username and password in the JSON payload (non-standard; use with caution).</li> </ul> </li> <li> <p>HTTP Headers:     Optionally add one or more HTTP headers to include in the POST request.</p> </li> </ul>"},{"location":"metadispatch/#ssltls-options","title":"SSL/TLS Options:","text":"<p>HTTPS mode settings, such as skipping SSL verification, can be configured as needed.</p>"},{"location":"metadispatch/#additional-json-payload","title":"Additional JSON Payload","text":"<p>You can enrich every HTTP request with any extra JSON you need by setting <code>Additional JSON Payload</code>. This JSON object will be deep-merged into the default payload at the top level, after the built-in fields (<code>measurement</code>, <code>tags</code>, <code>fields</code>, <code>timestamp</code>, etc.) are added.</p> <p>Placeholders of the form <code>$path.to.value$</code> may be used anywhere inside your extra JSON to inject values from the base payload:</p> <ul> <li><code>$measurement$</code> \u2192 the measurement name  </li> <li><code>$timestamp$</code>   \u2192 the Unix timestamp  </li> <li><code>$tags.&lt;key&gt;$</code>   \u2192 any tag value (e.g. <code>$tags.name$</code>)  </li> <li><code>$fields.&lt;key&gt;$</code> \u2192 any field value </li> </ul>"},{"location":"metadispatch/#example-of-an-additional-json-payload","title":"Example of an additional JSON Payload","text":"<pre><code>{\n   {\n   \"my_extra_json\":{\n      \"foo\":\"bar\",\n   },\n}\n</code></pre> <p>Resulting Payload</p> <pre><code>{\n   {\n   \"my_extra_json\":{\n      \"foo\":\"bar\",\n   },\n   \"fields\":{\n      \"state\":false\n   },\n   \"measurement\":\"metadata\",\n   \"tags\":{\n      \"context\":\"Manual trigger\",\n      \"mac\":\"B8A44F631339\",\n      \"name\":\"device_io_virtualport\",\n      \"topic\":\"tns1:Device/tnsaxis:IO/VirtualPort\"\n   },\n}\n</code></pre>"},{"location":"metadispatch/#placeholder-rules","title":"Placeholder Rules","text":"<ul> <li>Delimiters: placeholders must start and end with a dollar sign (<code>$</code>), e.g. <code>$tags.name$</code>.</li> <li>Supported keys:<ul> <li><code>measurement</code></li> <li><code>timestamp</code></li> <li><code>tags.&lt;tagKey&gt;</code></li> <li><code>fields.&lt;fieldKey&gt;</code></li> </ul> </li> <li>If a placeholder path does not exist, it is replaced with an empty string.</li> </ul>"},{"location":"metadispatch/#datapoints","title":"Datapoints","text":"<p>This feature introduces two distinct approaches for data collection:</p> <ul> <li> <p>Non-Metadata Data Points:   All non-metadata data points have an interval-based configuration. You can specify how frequently each datapoint/metric is collected.</p> <p>Note</p> <p>Each non-metadata data point can be added only once.</p> </li> <li> <p>Metadata Data Points:   Metadata data points are event-based. They are not collected on a fixed interval but are triggered by specific events.</p> <p>Tip</p> <p>You can add as many metadata events as you want, allowing you to capture detailed information exactly when it matters.</p> </li> </ul>"},{"location":"metadispatch/#data-point-buttons","title":"Data Point Buttons","text":"<p>Edit Data Point</p> <p></p> <p>Remove Data Point</p> <p></p>"},{"location":"metadispatch/#configure-non-metadata-data-points","title":"Configure Non-Metadata Data Points","text":""},{"location":"metadispatch/#add-non-metadata-data-points","title":"Add Non-Metadata Data Points","text":"<p>Examples of Non-Metadata Data Points</p> <ul> <li>CPU</li> <li>Disk</li> <li>Uptime</li> <li>etc.</li> </ul> <p>Click the <code>ADD DATAPOINT</code> button to open the data point adding menu. </p> <p>Select the data point to add. </p> <p>Note</p> <p>If any data point is grayed out (disabled), it has already been added and cannot be added twice.</p>"},{"location":"metadispatch/#configure-non-metadata-data-points_1","title":"Configure Non-Metadata Data Points","text":"<p>To configure the data point, click on the <code>Edit Data Point</code> button.</p> <ul> <li>Set Interval:   Define the desired interval at which data should be pushed to InfluxDB.</li> </ul> <p>Click the <code>DONE</code> button when you have finished, then click the <code>SAVE</code> button.</p>"},{"location":"metadispatch/#configure-metadata-data-points","title":"Configure Metadata Data Points","text":""},{"location":"metadispatch/#add-metadata-data-points","title":"Add Metadata Data Points","text":"<p>Click the <code>ADD DATAPOINT</code> button to open the data point adding menu and select <code>Metadata</code>.</p> <p></p> <p></p> <p>After adding a new metadata datapoint, you will see that the configuration is initially incomplete. </p> <p></p>"},{"location":"metadispatch/#configure-metadata-data-points_1","title":"Configure Metadata Data Points","text":"<p>Open the configuration via the Edit button.</p> <p></p> <ul> <li>Name:   For better differentiation in the configuration list, you can change the name.</li> <li>Select Trigger:   Choose the event that will trigger the metadata capture (e.g., sensor threshold exceeded, error event, etc.).</li> <li>Define Metadata Fields:   Specify which metadata fields should be included in the payload.</li> <li>Data Point Name:   The data point name is the key with which the data is stored.</li> <li>Repeat:   Add as many metadata events as needed.</li> <li>Save Configuration:   After finishing the configuration, don't forget to click the <code>SAVE</code> button.</li> </ul>"},{"location":"metadispatch/#metadata-configuration-example","title":"Metadata Configuration Example","text":"<p>Metadata Day Night </p> <p>Metadata AXIS Object Analytics - Area Count Humans Example Push the Day Night metadata event </p> <p>The final configuration would look like this: </p>"},{"location":"metadispatch/#grafana-and-influxdb-integration","title":"Grafana and InfluxDB Integration","text":"<p>This guide shows you how to integrate Grafana with InfluxDB using the Flux query language.  Follow the steps below to set up your datasource and create a dashboard for visualizing data/metrics from your AXIS Camera.</p>"},{"location":"metadispatch/#prerequisites","title":"Prerequisites","text":"<p>Info</p> <p>You should already have everything in place, as it\u2019s configured identically to the Missing Feature ACAP setup.</p> <ul> <li>Missing Feature ACAP: InfluxDB Push enabled, and configured.</li> <li>InfluxDB: A running InfluxDB instance. </li> <li>InfluxDB API Token: ACAP uses token-based authentication with InfluxDB.</li> <li>InfluxDB Bucket: You need an InfluxDB bucket.</li> <li>InfluxDB Org: You need the name of your InfluxDB organization.</li> </ul>"},{"location":"metadispatch/#add-influxdb-datasource-in-grafana","title":"Add InfluxDB Datasource in Grafana","text":"<p>First, navigate to your Grafana instance and add a new InfluxDB datasource.</p> <p></p>"},{"location":"metadispatch/#configure-datasource-settings","title":"Configure Datasource Settings","text":"<ul> <li>Datasource Name: Set a name for your datasource.</li> <li>Query Language: Select Flux as the query language.</li> </ul>"},{"location":"metadispatch/#set-your-influxdb-http-url","title":"Set Your InfluxDB HTTP URL","text":"<p>Specify your InfluxDB HTTP URL in the settings.</p> <p></p>"},{"location":"metadispatch/#enter-influxdb-credentials","title":"Enter InfluxDB Credentials","text":"<p>Fill in your InfluxDB Organization, Token, and Default Bucket.</p> <p></p>"},{"location":"metadispatch/#create-a-dashboard","title":"Create a Dashboard","text":"<p>Navigate to the dashboard section in Grafana and add a new visualization. For example, create a panel to monitor the Missing Features CPU usage.</p> <p></p>"},{"location":"metadispatch/#extracting-flux-scripts-from-influxdb-data-explorer-for-grafana","title":"Extracting Flux Scripts from InfluxDB Data Explorer for Grafana","text":"<p>Use the InfluxDB Data Explorer to inspect the data and use the query builder in combinitation, to switch afterwards to script editor mode to copy the flux script for grafana. </p> <p>For example, let's locate our metadata event device_io_virtualport that we previously configured and executed to ensure an entry exists in the database:</p> <ul> <li>Select the bucket.</li> <li>Choose <code>metadata</code>.</li> <li>Set the filter to <code>name</code>.</li> <li>Select <code>device_io_virtualport</code>.</li> <li>Uncheck the <code>AGGREATE Function</code> on the right side (it's a boolean value).</li> <li>Enable the <code>View Raw Data</code> mode to display our entries in a table.</li> </ul> <p></p> <ul> <li>Click on the Script Editor button to view the Flux script.</li> <li>You can now use this Flux script in Grafana.</li> </ul> <p></p>"},{"location":"metadispatch/#public-tutorials-and-additional-resources","title":"Public Tutorials and Additional Resources","text":"<p>For further learning and more detailed tutorials, consider the following public resources:</p> <ul> <li> <p>Grafana Tutorials: Official Grafana Tutorials \u2013 Learn more about creating dashboards, panels, and advanced visualizations.</p> </li> <li> <p>InfluxDB Documentation: Official InfluxDB Docs \u2013 Detailed guides on installation, configuration, and usage of InfluxDB.</p> </li> <li> <p>Flux Language Guide: InfluxDB Flux Documentation \u2013 In-depth information on the Flux query language and its capabilities.</p> </li> </ul>"},{"location":"metadispatch/#available-datapoints-metrics","title":"Available Datapoints / Metrics","text":"Category Key Fields CPU <code>usage_percent</code>, <code>user</code>, <code>system</code>, <code>idle</code>, <code>nice</code>, <code>iowait</code>, <code>irq</code>, <code>softirq</code>, <code>steal</code>, <code>guest</code>, <code>guest_nice</code>, <code>load1</code>, <code>load5</code>, <code>load15</code> Disk <code>total</code>, <code>used</code>, <code>free</code>, <code>usage</code> <code>used percent</code>; tags: <code>device</code>, <code>fstype</code>, <code>mount</code> Metadata Based on event configuration Network <code>bytes_sent</code>, <code>bytes_recv</code>, <code>packets_sent</code>, <code>packets_recv</code>, <code>err_in</code>, <code>err_out</code>, <code>drop_in</code>, <code>drop_out</code> Power <code>current_power</code>, <code>average_power</code>, <code>max_power</code>, <code>pse_poe_class</code>, <code>lldp_poe_class</code>, <code>power_requested</code> Process <code>cpu_percent</code>, <code>RSS</code>, <code>VMS</code>, <code>HWM</code>, <code>data</code>, <code>stack</code>, <code>locked</code>, <code>swap</code> Swap <code>total</code>, <code>used</code>, <code>free</code>, <code>usage</code> <code>used percent</code> Scene Description Metadata <code>https://www.axis.com/ftp/devcom_files/scene_metadata/examples_json_frame_based.json</code> Scene Consolidated Track Metadata <code>https://www.axis.com/ftp/devcom_files/scene_metadata/examples_json_consolidated.json</code> Uptime <code>uptime</code> PTZ Movment <code>brightness</code>, <code>focus</code>, <code>pan</code>, <code>tilt</code>, <code>zoom</code> Virtual Memory <code>total</code>, <code>available</code>, <code>used</code>, <code>used_percent</code>, <code>free</code>, <code>active</code>, <code>inactive</code>, <code>wired</code>, <code>buffers</code>, <code>cached</code>, <code>write_back</code>, <code>dirty</code>, <code>write_back_tmp</code>, <code>shared</code>, <code>slab</code>, <code>sreclaimable</code>, <code>sunreclaim</code>, <code>page_tables</code>, <code>swap_cached</code>, <code>commit_limit</code>, <code>committed_as</code>, <code>high_total</code>, <code>high_free</code>, <code>low_total</code>, <code>low_free</code>, <code>swap_total</code>, <code>swap_free</code>, <code>mapped</code>, <code>vmalloc_total</code>, <code>vmalloc_used</code>, <code>vmalloc_chunk</code>, <code>huge_pages_total</code>, <code>huge_pages_free</code>, <code>huge_pages_rsvd</code>, <code>huge_pages_surp</code>, <code>huge_page_size</code>, <code>anon_huge_pages</code>"},{"location":"metadispatch/#opc-ua","title":"OPC UA","text":"<p>The OPC UA Sink lets you forward metadata from your device to any OPC UA\u2013compliant server. Unlike other sinks, OPC UA mode only supports event-driven metadata (no interval-based metrics).</p>"},{"location":"metadispatch/#overview","title":"Overview","text":"<ul> <li>Supported Data: Metadata only  </li> <li>Security: Configurable message signing/encryption and authentication  </li> </ul> <p>Note</p> <p>In OPC UA mode, interval-based metrics (CPU, Disk, Network, etc.) are disabled. Only metadata datapoints are accepted.  </p>"},{"location":"metadispatch/#configuration-fields","title":"Configuration Fields","text":"Field Label Description Server Endpoint Enter the OPC UA server endpoint (e.g. <code>opc.tcp://hostname:4840</code>). Namespace Index Specify the namespace index on the server where your OPC UA nodes reside. Security Mode Choose how messages are protected:\u2022 Auto \u2013 negotiate best available\u2022 None \u2013 no security\u2022 Sign \u2013 sign only\u2022 Sign &amp; Encrypt \u2013 sign and encrypt SecurityPolicy Select the policy used for signing/encryption (e.g. Basic256Sha256). Visible when Security Mode \u2260 None. Authentication Mode Choose how the client authenticates:\u2022 Anonymous\u2022 Credentials (username/password)\u2022 Certs (certificate-based) Username Enter your OPC UA username. Visible when Authentication Mode = Credentials. Password Enter your OPC UA password. Visible when Authentication Mode = Credentials. Use Autogenerated Message Certificate Toggle on to auto-generate a client cert/key for message signing/encryption. Visible when Security Mode \u2260 None. Message Certificate Select an uploaded PEM certificate for signing/encryption. Visible when auto-generation is off. Message RSA Private Key Select the corresponding RSA private key for the message certificate. Visible when auto-generation is off. Certificate Select the client auth PEM certificate. Visible when Authentication Mode = Certs. RSA Private Key Select the client auth RSA private key. Visible when Authentication Mode = Certs."},{"location":"metadispatch/#certificates-management","title":"Certificates Management","text":"<p>Use the Certificates Management panel to upload or your <code>.pem</code> and <code>.key</code> files.</p>"},{"location":"metadispatch/#metadata-datapoints","title":"Metadata Datapoints","text":"<p>Because OPC UA supports only metadata, you must add at least one Metadata datapoint.</p>"},{"location":"metadispatch/#example-test-setup-python-opc-server","title":"Example - Test Setup (Python OPC Server)","text":"<p>Below is a Python demonstration that sends the state of the manual trigger (virtual port) and the status of an AXIS Object Analytics scenario to a minimally implemented OPC UA server in Python.</p> <p>The screenshot showing the Metadata Dispatcher\u2019s general settings, IP address and namespace index, should match the host machine where the demo OPC UA server is running and the namespace you have configured there.</p> <p></p> <p>Virtual Port Datapoint </p> <p>Object Analytics Scenario Datapoint </p>"},{"location":"metadispatch/#prerequisites_1","title":"Prerequisites","text":"<ol> <li> <p>Python   Python 3.7 or higher</p> </li> <li> <p>Install Dependencies <pre><code>pip install opcua\n</code></pre></p> </li> <li> <p>Network &amp; Firewall     The server listens on opc.tcp://0.0.0.0:7878/freeopcua/server/     Ensure port 7878 is open/allowed in your firewall.</p> </li> <li> <p>Run the Script   Save the script below as opc_demo_server.py, then run it with:   <pre><code>python opc_demo_server.py\n</code></pre></p> </li> </ol> <p>Python Demo Server <pre><code>from opcua import ua, Server\nfrom dataclasses import dataclass\nfrom datetime import datetime\nimport time\n\n@dataclass\nclass OpcNodeDef:\n    \"\"\"Definition for an OPC UA node to create.\"\"\"\n    identifier: str     # the NodeId identifier (string)\n    name: str           # display name of the variable\n    initial_value: any  # the initial value to set\n\n# Define here as many nodes as you like:\nnodes_to_create = [\n    OpcNodeDef(\"device_io_virtualport_state\", \"Virtual Port\", False),\n    OpcNodeDef(\"objectanalytics_device1scenario5_active\", \"OA Scenario 5\", False),\n    # ... add more nodes here ...\n]\n\ndef create_nodes(parent, namespace_idx, node_defs):\n    \"\"\"\n    Create a batch of variables under `parent` (an ObjectNode), using\n    the given namespace index. \n    \"\"\"\n    created = {}\n    for nd in node_defs:\n        nodeid = ua.NodeId(nd.identifier, namespace_idx)\n        var = parent.add_variable(nodeid, nd.name, nd.initial_value)\n        var.set_writable()  # make sure clients (or us) can write to it\n        print(f\"Created node {nd.name!r} with NodeId={nd.identifier!r}, initial value={nd.initial_value!r}\")\n        created[nd.identifier] = var\n    return created\n\nif __name__ == \"__main__\":\n    # Setup server\n    server = Server()\n    server.set_endpoint(\"opc.tcp://0.0.0.0:7878/freeopcua/server/\")\n    uri = \"http://examples.freeopcua.github.io\"\n    idx = server.register_namespace(uri)\n\n    # Get the root Objects folder and add our demo object\n    objects = server.get_objects_node()\n    demo = objects.add_object(idx, \"DemoObject\")\n\n    # Create all our variables in one go\n    variables = create_nodes(demo, idx, nodes_to_create)\n\n    # Start the server\n    server.start()\n    print(\"OPC UA Server started at opc.tcp://0.0.0.0:7878/freeopcua/server/\")\n\n    try:\n        # 5. Main loop: log every variable\u2019s value with timestamp once per second\n        while True:\n            now = datetime.now().isoformat(sep=' ', timespec='seconds')\n            for ident, var in variables.items():\n                val = var.get_value()\n                print(f\"[{now}] {ident}: {val!r}\")\n            time.sleep(1)\n    except KeyboardInterrupt:\n        print(\"Shutting down server...\")\n    finally:\n        server.stop()\n        print(\"Server stopped.\")\n</code></pre></p> <p>Output <pre><code>PS Y:\\code_projects\\ax_missing_feature&gt; python .\\opc.py\nCreated node 'Virtual Port' with NodeId='device_io_virtualport_state', initial value=False\nCreated node 'OA Scenario 5' with NodeId='objectanalytics_device1scenario5_active', initial value=False\nEndpoints other than open requested but private key and certificate are not set.\nListening on 0.0.0.0:7878\nOPC UA Server started at opc.tcp://0.0.0.0:7878/freeopcua/server/\n[2025-05-26 11:03:41] device_io_virtualport_state: False\n[2025-05-26 11:03:41] objectanalytics_device1scenario5_active: False\n[2025-05-26 11:03:42] device_io_virtualport_state: False\n[2025-05-26 11:03:42] objectanalytics_device1scenario5_active: False\n[2025-05-26 11:03:43] device_io_virtualport_state: False\n[2025-05-26 11:03:43] objectanalytics_device1scenario5_active: False\nUnknown message received FourByteNodeId(i=841)\n[2025-05-26 11:03:44] device_io_virtualport_state: False\n[2025-05-26 11:03:44] objectanalytics_device1scenario5_active: True\n[2025-05-26 11:03:45] device_io_virtualport_state: False\n[2025-05-26 11:03:45] objectanalytics_device1scenario5_active: True\n[2025-05-26 11:03:46] device_io_virtualport_state: False\n[2025-05-26 11:03:46] objectanalytics_device1scenario5_active: True\n[2025-05-26 11:03:47] device_io_virtualport_state: False\n[2025-05-26 11:03:47] objectanalytics_device1scenario5_active: True\n[2025-05-26 11:03:48] device_io_virtualport_state: False\n[2025-05-26 11:03:48] objectanalytics_device1scenario5_active: True\n[2025-05-26 11:03:49] device_io_virtualport_state: False\n[2025-05-26 11:03:49] objectanalytics_device1scenario5_active: True\n[2025-05-26 11:03:50] device_io_virtualport_state: False\n[2025-05-26 11:03:50] objectanalytics_device1scenario5_active: False\n[2025-05-26 11:03:51] device_io_virtualport_state: False\n[2025-05-26 11:03:51] objectanalytics_device1scenario5_active: False\n[2025-05-26 11:03:52] device_io_virtualport_state: False\n</code></pre></p>"},{"location":"notifications/","title":"Notifications Configuration","text":"<p>Send SMS to Teltonika devices, or sms/phone calls via seven.io</p>"},{"location":"notifications/#access-the-configuration-page","title":"Access the Configuration Page","text":"<ul> <li>Open your AXIS camera\u2019s web interface:   Navigate to the camera\u2019s IP address using your preferred web browser.</li> <li>Go to the APP Section:   In the web interface, locate and click on the APP section.</li> <li>Enable Notifications:   Find Missing Feature ACAP, open it, and enable the Notifications from the feature list. This will launch its configuration panel.</li> </ul>"},{"location":"notifications/#configure-the-teltonika-sms","title":"Configure the Teltonika SMS","text":"<ul> <li>Url:   Enter the URL of your Teltonika router, like https://192.168.1.50</li> <li>Username:   Enter the username that to connect to the router.</li> <li>Password:   Provide the corresponding password for the specified username.</li> <li>Message:   Specify text that should be send as SMS.</li> <li>Phone Numbers:   A list of phone numbers in full format with leading zeros like: 00436763151474</li> <li>Trigger Event:   Choose the event that will trigger the sending of SMS.</li> <li>Event Timeout:   Timeout after event to prevent multiple notifications in a short time.</li> </ul>"},{"location":"notifications/#configure-the-seven-sms","title":"Configure the Seven SMS","text":"<ul> <li>API Key:   Enter your API key, that you created on seven.io developer section.</li> <li>Message:   Specify text that should be send as SMS.</li> <li>From Number:   Enter a verified phone number, that you have added trough seven.io Account/Settings/Sender identifiers.</li> <li>Phone Numbers:   A list of phone numbers in full format with leading zeros like: 00436763151474</li> <li>Trigger Event:   Choose the event that will trigger the sending of SMS.</li> <li>Event Timeout:   Timeout after event to prevent multiple notifications in a short time.</li> </ul>"},{"location":"notifications/#configure-the-seven-voice","title":"Configure the Seven Voice","text":"<ul> <li>API Key:   Enter your API key, that you created on seven.io developer section.</li> <li>Message:   Specify text that should be played trough the phone call.</li> <li>From Number:   Enter a verified phone number, that you have added trough seven.io Account/Settings/Sender identifiers.</li> <li>Phone Numbers:   A list of phone numbers in full format with leading zeros like: 00436763151474</li> <li>Trigger Event:   Choose the event that will trigger the call.</li> <li>Event Timeout:   Timeout after event to prevent multiple notifications in a short time.</li> </ul>"},{"location":"notifications/#configure-the-sms-eagle-voice-sms","title":"Configure the SMS Eagle (Voice, SMS)","text":"<p>Before you can use the SMS Eagle device, you must enable APIv2 and obtain an API token via the SMS Eagle web interface.</p> <p>API permissions must also be set up.</p> <p> </p> <ul> <li>Url:   Enter the URL of your SMS Eagle device, like https://192.168.1.50</li> <li>API Key:   Enter your API key.</li> <li>Message:   Specify text that should be played trough the phone call or send via SMS.</li> <li>Phone Numbers:   A list of phone numbers in full format with leading zeros like: 00436763151474</li> <li>VoiceId:   Corresponding voice ID when using a voice call.</li> <li>Trigger Event:   Choose the event that will trigger the sending of SMS.</li> <li>Event Timeout:   Timeout after event to prevent multiple notifications in a short time.</li> </ul> <p>Voice ID for calls </p> <p>Test</p> <p>Before test you need to save the configuration.</p>"},{"location":"notifications/#save-the-configuration","title":"Save the Configuration","text":"<ul> <li>Save:   Once you have entered all required settings, click Save to apply the configuration.</li> </ul>"},{"location":"occupancy/","title":"Occupancy counting","text":"<p>Occupancy counting using multiple cameras.</p>"},{"location":"occupancy/#access-the-configuration-page","title":"Access the Configuration Page","text":"<ul> <li>Open your AXIS camera\u2019s web interface:   Navigate to the camera\u2019s IP address using your preferred web browser.</li> <li>Go to the APP Section:   In the web interface, locate and click on the APP section.</li> <li>Enable Occupancy counting:   Find Missing Feature ACAP, open it, and enable the Occupancy counting from the feature list. This will launch its configuration panel.</li> </ul>"},{"location":"occupancy/#configuration","title":"Configuration","text":"<p>Each zone can include multiple cameras and represents an area where occupancy is tracked collectively across all cameras.</p> <p>Initial Zone Cannot Be Deleted</p> <p>The first created zone is non-deletable because it is bound to the camera where the ACAP is installed.</p>"},{"location":"occupancy/#add-zone","title":"Add Zone","text":"<p>Adding a new zone with the Plus Button.</p> <p></p> <p>Once a new zone is created, it requires configuration, including camera assignment and definition of counting rules. </p>"},{"location":"occupancy/#configure-zone","title":"Configure Zone","text":""},{"location":"occupancy/#zone-details","title":"Zone Details","text":"<ul> <li> <p>Zone Name   Enter or modify the name of the zone. This name should uniquely identify the area being monitored.</p> </li> <li> <p>Add Camera   Assign one or more cameras to the zone. A zone must have at least one camera to be valid.</p> </li> </ul>"},{"location":"occupancy/#zone-settings","title":"Zone Settings","text":"<ul> <li>Use Clear Event   Enable this option to allow a configured event to reset the zone\u2019s occupancy count.  </li> <li> <p>Configure Clear Event: Select the event that resets occupancy. Required if \"Use Clear Event\" is enabled.</p> </li> <li> <p>Use Loitering Alert   Enable to trigger an alert if no exit occurs after an entry within a defined time window.  </p> </li> <li> <p>Loitering Timeout (seconds): The time in seconds after which the loitering alert is triggered if no exit event is received.</p> </li> <li> <p>Use Thresholds   Enable to define warning and maximum occupancy levels that can trigger additional actions.  </p> </li> <li>Warn Level: The occupancy count at which a warning should be triggered.  </li> <li>Max Level: The maximum allowable occupancy. Exceeding this can trigger critical alerts.</li> </ul>"},{"location":"occupancy/#configure-camera","title":"Configure Camera","text":"<p>Each camera must be properly configured and assigned zone triggers in order to function in the occupancy system.</p> <ul> <li> <p>Name   Enter a unique name for the camera.</p> </li> <li> <p>IP Address   Specify the IP address of the camera.</p> </li> <li> <p>Username   Enter the username used to authenticate with the camera.</p> </li> <li> <p>Password   Enter the password for camera authentication.</p> </li> <li> <p>HTTPS   Toggle to enable or disable HTTPS connection for the camera.</p> </li> </ul>"},{"location":"occupancy/#zone-triggers","title":"Zone Triggers","text":"<p>Assign zone trigger roles and associated events for entry and exit.</p> <ul> <li>Role: Entry   Select the event that increases the zone occupancy count.  </li> <li> <p>Configure Entry: Choose an entry event. Required for zone entry tracking.</p> </li> <li> <p>Role: Exit   Select the event that decreases the zone occupancy count.  </p> </li> <li> <p>Configure Exit: Choose an exit event. Required for zone exit tracking.</p> </li> <li> <p>\ud83d\uddd1\ufe0f Trash Icon: Use this to remove a specific entry or exit trigger from the configuration.</p> </li> </ul>"},{"location":"occupancy/#validation-errors","title":"Validation Errors","text":"<p>Displayed at the bottom of the screen if input validation fails:</p> <ul> <li> <p>\ud83d\udd34 \"A occupancy zone must have at least one camera!\"   \u2192 Ensure at least one camera is assigned before saving the zone.</p> </li> <li> <p>\ud83d\udd34 \"An event on New Camera must be selected!\"   \u2192 At least one entry or exit event must be configured.</p> </li> <li> <p>\ud83d\udd34 \"One or more fields are invalid\"   \u2192 Check all required fields (such as zone name, event configurations) for correctness.</p> </li> <li> <p>\ud83d\udd34 \"Camera must have at least one event trigger\"   \u2192 Add a zone trigger to camera, via the plus circle button (green).</p> </li> </ul>"},{"location":"occupancy/#occupancy-monitor","title":"Occupancy Monitor","text":"<p>Displays the current occupancy count of each zone in real time. Useful for visual monitoring of zone status and threshold violations.</p>"},{"location":"occupancy/#zone-display","title":"Zone Display","text":"<p>Each zone is shown with:</p> <ul> <li> <p>Zone Name   The name of the configured zone (e.g., Default Zone).</p> </li> <li> <p>Occupancy Count   The current number of detected occupants in the zone.</p> </li> <li> <p>Threshold Indicators </p> <ul> <li>Warn Level: Displayed as a label (e.g., 8 Warn)  </li> <li>Max Level: Displayed as a label (e.g., 10 Max) These levels are set in the zone settings and indicate when the zone is approaching or exceeding occupancy limits, only visible when thresholds are enabled.</li> </ul> </li> </ul>"},{"location":"occupancy/#manual-adjustment-controls","title":"Manual Adjustment Controls","text":"<ul> <li> <p>\u2796 Decrease Button   Decreases the occupancy count manually. Useful for testing or administrative overrides.</p> </li> <li> <p>\u2795 Increase Button   Increases the occupancy count manually.</p> </li> </ul>"},{"location":"occupancy/#influxdb-grafana-flux-functions","title":"InfluxDB / Grafana Flux Functions","text":"<p>This section provides a set of ready-to-use Flux functions to simplify querying metadata in InfluxDB \u2014 such as zone occupancy, camera activity, and entry/exit counts.</p> <p>Each function can be customized by changing a few variables at the top (like bucket name, zone, camera, or time window), making it easy to reuse these in Grafana panels without writing full queries from scratch.</p>"},{"location":"occupancy/#occupancy-count-for-a-specific-zone","title":"Occupancy Count for a Specific Zone","text":"<p>This function returns the occupancy values for a specific zone like (e.g., <code>\"Default Zone\"</code>), by joining <code>zone</code> and <code>occupancy</code> fields over time.</p> <p></p> <pre><code>// === CONFIGURATION ===\noption bucket = \"occ\"             // Change this\noption zoneName = \"Default Zone\"  // Change this\n\n// === FUNCTION ===\ngetZoneOccupancy = (bucket, zoneName) =&gt; {\n  zoneStream = from(bucket: bucket)\n    |&gt; range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |&gt; filter(fn: (r) =&gt; r[\"_measurement\"] == \"metadata\")\n    |&gt; filter(fn: (r) =&gt; r[\"_field\"] == \"zone\")\n    |&gt; filter(fn: (r) =&gt; r[\"_value\"] == zoneName)\n\n  occupancyStream = from(bucket: bucket)\n    |&gt; range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |&gt; filter(fn: (r) =&gt; r[\"_measurement\"] == \"metadata\")\n    |&gt; filter(fn: (r) =&gt; r[\"_field\"] == \"occupancy\")\n\n  return join(\n      tables: {zone: zoneStream, occ: occupancyStream},\n      on: [\"_time\"]\n    )\n    |&gt; keep(columns: [\"_time\", \"_value_zone\", \"_value_occ\"])\n    |&gt; rename(columns: {\n      \"_value_occ\": \"occupancy\",\n      \"_value_zone\": \"zone\"\n    })\n}\n\n// === CALL ===\ngetZoneOccupancy(bucket: bucket, zoneName: zoneName)\n</code></pre>"},{"location":"occupancy/#occupancy-aggregation","title":"Occupancy Aggregation","text":"<p>This function returns the aggregated occupancy value for a specified zone from a given bucket, using a configurable aggregation window (e.g., every 5 minutes). It automatically joins <code>zone</code> and <code>occupancy</code> data based on timestamps and calculates the average (mean) occupancy in each time interval.</p> <p></p> <p>\ud83d\udca1 You can change the aggregation function from <code>mean</code> to <code>sum</code>, <code>max</code>, <code>min</code>, etc. if needed.</p> <pre><code>// === CONFIGURATION ===\noption bucket = \"occ\"               // The InfluxDB bucket name\noption zoneName = \"Default Zone\"    // The zone you want to analyze\noption aggWindow = 5m               // Aggregation time window\n\n// === FUNCTION ===\ngetZoneOccupancy = (bucket, zoneName, aggWindow) =&gt; {\n  zoneStream = from(bucket: bucket)\n    |&gt; range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |&gt; filter(fn: (r) =&gt; r[\"_measurement\"] == \"metadata\")\n    |&gt; filter(fn: (r) =&gt; r[\"_field\"] == \"zone\")\n    |&gt; filter(fn: (r) =&gt; r[\"_value\"] == zoneName)\n\n  occupancyStream = from(bucket: bucket)\n    |&gt; range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |&gt; filter(fn: (r) =&gt; r[\"_measurement\"] == \"metadata\")\n    |&gt; filter(fn: (r) =&gt; r[\"_field\"] == \"occupancy\")\n\n  return join(\n      tables: {zone: zoneStream, occ: occupancyStream},\n      on: [\"_time\"]\n    )\n    |&gt; keep(columns: [\"_time\", \"_value_zone\", \"_value_occ\"])\n    |&gt; rename(columns: {\n      \"_value_occ\": \"occupancy\",\n      \"_value_zone\": \"zone\"\n    })\n    |&gt; map(fn: (r) =&gt; ({ r with _value: r.occupancy }))\n    |&gt; group(columns: [\"zone\"])\n    |&gt; aggregateWindow(every: aggWindow, fn: mean, createEmpty: false)\n    |&gt; rename(columns: { _value: \"occupancy\" })\n}\n\n// === CALL FUNCTION ===\ngetZoneOccupancy(bucket: bucket, zoneName: zoneName, aggWindow: aggWindow)\n</code></pre>"},{"location":"occupancy/#zone-camera-change","title":"Zone Camera change","text":"<p>This function filters and joins the <code>camera</code>, <code>zone</code>, and <code>change</code> fields by time to return all raw change events for a specific camera and zone.</p> <p></p> <pre><code>// === CONFIGURATION ===\noption bucket = \"occ\"                   // Change this\noption cameraName = \"Entrance 6\"        // Change this\noption zoneName = \"Default Zone\"        // Change this\n\n// === FUNCTION ===\ngetZoneCameraChangeEvents = (bucket, cameraName, zoneName) =&gt; {\n  cameraStream = from(bucket: bucket)\n    |&gt; range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |&gt; filter(fn: (r) =&gt; r[\"_measurement\"] == \"metadata\")\n    |&gt; filter(fn: (r) =&gt; r[\"_field\"] == \"camera\")\n    |&gt; filter(fn: (r) =&gt; r[\"_value\"] == cameraName)\n\n  zoneStream = from(bucket: bucket)\n    |&gt; range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |&gt; filter(fn: (r) =&gt; r[\"_measurement\"] == \"metadata\")\n    |&gt; filter(fn: (r) =&gt; r[\"_field\"] == \"zone\")\n    |&gt; filter(fn: (r) =&gt; r[\"_value\"] == zoneName)\n\n  changeStream = from(bucket: bucket)\n    |&gt; range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |&gt; filter(fn: (r) =&gt; r[\"_measurement\"] == \"metadata\")\n    |&gt; filter(fn: (r) =&gt; r[\"_field\"] == \"change\")\n\n  zoneCamera = join(\n    tables: {cam: cameraStream, zone: zoneStream},\n    on: [\"_time\"]\n  )\n\n  finalJoin = join(\n    tables: {zc: zoneCamera, chg: changeStream},\n    on: [\"_time\"]\n  )\n    |&gt; keep(columns: [\"_time\", \"_value_cam\", \"_value_zone\", \"_value\"])\n    |&gt; rename(columns: {\n      \"_value_cam\": \"camera\",\n      \"_value_zone\": \"zone\",\n      \"_value\": \"change\"\n    })\n\n  return finalJoin\n}\n\n// === CALL ===\ngetZoneCameraChangeEvents(bucket: bucket, cameraName: cameraName, zoneName: zoneName)\n</code></pre>"},{"location":"occupancy/#counting-aggregation","title":"Counting Aggregation","text":"<p>This Flux function aggregates entry (<code>+1</code>) and exit (<code>-1</code>) events for a specified camera and zone over a configurable time window.  It returns the number of entries and exits grouped by time, camera, and zone.</p> <p></p> <p>\ud83d\udca1 You can change the aggregation function from <code>mean</code> to <code>sum</code>, <code>max</code>, <code>min</code>, etc. if needed.</p> <pre><code>// === CONFIGURATION ===\noption bucket = \"occ\"                // Change this\noption cameraName = \"Entrance 7\"     // Change this\noption zoneName = \"Default Zone\"     // Change this\noption aggWindow = 5m                // Change this\n\n// === FUNCTION ===\ngetEntryExitCounts = (bucket, cameraName, zoneName, aggWindow) =&gt; {\n    cameraStream = from(bucket: bucket)\n      |&gt; range(start: v.timeRangeStart, stop: v.timeRangeStop)\n      |&gt; filter(fn: (r) =&gt; r[\"_measurement\"] == \"metadata\")\n      |&gt; filter(fn: (r) =&gt; r[\"_field\"] == \"camera\")\n      |&gt; filter(fn: (r) =&gt; r[\"_value\"] == cameraName)\n\n    zoneStream = from(bucket: bucket)\n      |&gt; range(start: v.timeRangeStart, stop: v.timeRangeStop)\n      |&gt; filter(fn: (r) =&gt; r[\"_measurement\"] == \"metadata\")\n      |&gt; filter(fn: (r) =&gt; r[\"_field\"] == \"zone\")\n      |&gt; filter(fn: (r) =&gt; r[\"_value\"] == zoneName)\n\n    changeStream = from(bucket: bucket)\n      |&gt; range(start: v.timeRangeStart, stop: v.timeRangeStop)\n      |&gt; filter(fn: (r) =&gt; r[\"_measurement\"] == \"metadata\")\n      |&gt; filter(fn: (r) =&gt; r[\"_field\"] == \"change\")\n\n    zoneCamera = join(\n      tables: {cam: cameraStream, zone: zoneStream},\n      on: [\"_time\"]\n    )\n\n    finalJoin = join(\n      tables: {zc: zoneCamera, chg: changeStream},\n      on: [\"_time\"]\n    )\n      |&gt; keep(columns: [\"_time\", \"_value_cam\", \"_value_zone\", \"_value\"])\n      |&gt; rename(columns: {\n          \"_value_cam\": \"camera\",\n          \"_value_zone\": \"zone\",\n          \"_value\": \"change\"\n      })\n\n    entryStream = finalJoin\n      |&gt; filter(fn: (r) =&gt; r.change == 1)\n      |&gt; map(fn: (r) =&gt; ({ r with _value: 1 }))\n      |&gt; group(columns: [\"camera\", \"zone\"])\n      |&gt; aggregateWindow(every: aggWindow, fn: count, createEmpty: false)\n      |&gt; rename(columns: { _value: \"entries\" })\n\n    exitStream = finalJoin\n      |&gt; filter(fn: (r) =&gt; r.change == -1)\n      |&gt; map(fn: (r) =&gt; ({ r with _value: 1 }))\n      |&gt; group(columns: [\"camera\", \"zone\"])\n      |&gt; aggregateWindow(every: aggWindow, fn: count, createEmpty: false)\n      |&gt; rename(columns: { _value: \"exits\" })\n\n    return join(\n      tables: {in: entryStream, out: exitStream},\n      on: [\"_time\", \"camera\", \"zone\"]\n    )\n}\n\n// === CALL FUNCTION ===\ngetEntryExitCounts(bucket: bucket, cameraName: cameraName, zoneName: zoneName, aggWindow: aggWindow)\n</code></pre>"},{"location":"parking_times/","title":"Parking Times Configuration","text":"<p>Note</p> <p>Only works with AXIS License Plate Verifier (ALPV)</p>"},{"location":"parking_times/#preparing-axis-license-plate-verifier","title":"Preparing AXIS License Plate Verifier","text":"<ul> <li>Configure ALPV:   Ensure that your AXIS License Plate Verifier is set up with multiple Regions of Interest (ROIs) and a directional arrow. This configuration is essential for correctly detecting cars that enter or exit the parking area.</li> </ul>"},{"location":"parking_times/#access-the-configuration-page","title":"Access the Configuration Page","text":"<ul> <li>Open the Camera Web Interface:   Navigate to your AXIS camera\u2019s IP address using your web browser.</li> <li>Navigate to the APP Section:   Locate and click on the APP section.</li> <li>Enable Parking Times:   Find Missing Feature ACAP, open it, and enable Parking Times from the feature list to open its configuration panel.</li> </ul>"},{"location":"parking_times/#genaral-configuration","title":"Genaral Configuration","text":"<ul> <li> <p>Max Parking Duration (Minutes):   Specify the maximum number of minutes a vehicle is allowed to park.  </p> <p>If a vehicle exceeds this duration, it is flagged as overparked.</p> </li> <li> <p>Auto-Removal (Minutes):   Define the duration for which a license plate record is retained in the database before it is automatically deleted.</p> </li> <li> <p>LPR Event Types: </p> </li> <li>New: Indicates the first detection of a license plate.</li> <li>Update:   Represents either a correction to a previously detected license plate (e.g.,       character refinement), or when a direction is identified as the plate is       tracked across the image.</li> <li> <p>Lost: Marks the last tracked position of the license plate before it leaves the       image. This event also includes the direction in which the plate exited.</p> </li> <li> <p>Save Changes:   Click Save to store your configuration settings.</p> </li> </ul>"},{"location":"parking_times/#parking-zones-configuration","title":"Parking Zones Configuration","text":"<p>Parking zones make it possible to support most parking scenarios, including setups with multiple zones or areas.</p> <p>The system supports:</p> <ul> <li>A single camera, acting as both entry and exit.</li> <li>Multiple cameras, where each camera must be assigned a <code>Role</code> within the zone.</li> </ul>"},{"location":"parking_times/#configuration-rules-roles","title":"Configuration Rules (Roles)","text":"<p>To ensure correct behavior, the following rules must be respected:</p> <ul> <li>A zone cannot have multiple cameras with the role <code>ENTRY_AND_EXIT</code>.</li> <li>A zone that does not contain a camera with the role <code>ENTRY_AND_EXIT</code> must include at least one <code>ENTRY</code> and one <code>EXIT</code> role.</li> <li>A zone with a camera set to <code>ENTRY_AND_EXIT</code> can also include additional cameras with the <code>ENTRY</code> or <code>EXIT</code> roles.</li> <li>The same camera cannot be assigned multiple times to a single zone.</li> </ul>"},{"location":"parking_times/#configuration","title":"Configuration","text":"<p>All cameras must be online</p> <p>After saving, a connection test is automatically performed for all external cameras to verify accessibility and credentials. Make sure all cameras are online during configuration.</p> <p>ACAP-Assigned Camera Restriction</p> <p>The initial default zone cannot be deleted because it is assigned to the internal camera running the ACAP. Also, the internal camera entry cannot be removed from this zone.</p> <p>Authentication Requirement</p> <p>Only Digest Authentication is supported for external cameras. Ensure that your cameras are running an up-to-date firmware, and that digest authentication is enabled.</p>"},{"location":"parking_times/#zone-buttons","title":"Zone Buttons","text":"<p>Edit Zone</p> <p></p> <p>Remove Zone</p> <p></p>"},{"location":"parking_times/#add-new-zone","title":"Add New Zone","text":"<p>Add a new zone by clicking the <code>ADD ZONE</code> button.</p> <p></p> <p>After adding a new zone, you will see that the configuration is initially incomplete. Click on the <code>Zone Edit</code> button to configure the zone. Configure the camera where ACAP is running or add new ones, and follow the <code>Configuration Roles</code>.</p>"},{"location":"parking_times/#camera-settings","title":"Camera Settings","text":"<ul> <li> <p>Name   Name of the camera.</p> </li> <li> <p>IP Address   Enter the IP address of the external camera.</p> </li> <li> <p>Username   Enter the username used to access the external camera.</p> </li> <li> <p>Password   Enter the password for the external camera.</p> </li> <li> <p>Use HTTPS   Enable this option to communicate securely with the external camera using HTTPS.</p> </li> <li> <p>Role   Specify the role of the camera within the zone (<code>Entry</code>, <code>Exit</code>, or <code>Entry and Exit</code>).</p> </li> </ul>"},{"location":"parking_times/#monitoring-section","title":"Monitoring Section","text":"<p>The monitoring section displays all currently detected vehicles and their parking details. Use the table below as a reference:</p> Column Description License Plate Shows the recognized plate number. Entry Time Timestamp of when the vehicle entered the parking area. Exit Time Timestamp of when the vehicle exited. Zone Zone Name. Camera Camera Name. Parking Duration (min) Duration (in minutes) that the vehicle remained parked. Exited Indicates whether the vehicle has left the parking area. Parking Time Exceeded Indicates whether the vehicle exceeded the maximum parking duration. <p>Additional controls in the monitoring interface include:</p> <ul> <li> <p>Table Freeze (Blue Pause Button):   Stops the automatic refresh of the monitoring table, allowing you to review data without updates.</p> </li> <li> <p>Show Only exceeded (Blue Car Icon):   Filters the list to display only vehicles that are currently exceeded.</p> </li> </ul> <p>Tip</p> <p>You can either use the dynamically generated Parking Time Exceeded, Car Entered, Car Exited events in the AXIS event rule or use the Metadata to HTTPS feature to send all details regarding parking minutes and plate information to an external HTTPS server.</p> <p></p>"},{"location":"parking_times/#connection-test","title":"Connection Test","text":"<p>All cameras must be online</p> <p>After saving, a connection test is automatically performed for all external cameras to verify accessibility and credentials. Make sure all cameras are online during configuration.</p>"},{"location":"parking_times/#use-live-logs-for-troubleshooting","title":"Use Live Logs for Troubleshooting","text":"<p>Open the Live Logs by clicking the logging button located in the bottom-left corner of the interface to view real-time log entries.</p> <p>Use the logs to validate incoming AXIS License Plate Verifier metadata messages. This is especially helpful for troubleshooting.</p> <p></p>"},{"location":"support/","title":"Support","text":"<p>If you have any questions or run into any issues, feel free to contact our dedicated  support team via email at VideoSolutions@commend.at.  We\u2019re here to help you with any concerns or queries regarding our documentation and solutions.</p>"}]}